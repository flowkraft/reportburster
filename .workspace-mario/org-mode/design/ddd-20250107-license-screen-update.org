#+TITLE: Detailed Design Document (DDD) for License Screen Update
#+AUTHOR: Mario
#+DATE: 2025-01-07
#+STATUS: Draft
#+REQUIREMENT: Feature 1: License Screen Update (from requirements-20250107-v10.2.4.org)

* Requirement Description
** Summary
Update the license screen terminology from "Demo" to "Community" to better reflect the open-source nature of the software.

** User Stories
- As a user, I want clear terminology that reflects the software's open-source status so that I understand the licensing model.

** Acceptance Criteria
- All instances of "Demo" in the license screen are replaced with "Community".
- The updated text is properly localized for all supported languages.
- The change is reflected in both the UI and documentation.

* Implementation Prompts
** Frontend Changes
- Locate all instances of "Demo" in the Angular frontend code.
- Replace "Demo" with "Community" in the relevant UI components.
- Ensure the changes are localized for all supported languages.

** Backend Changes
- Update any backend references to "Demo" in the license-related code.
- Ensure the changes are consistent with the frontend updates.

** Documentation Updates
- Update the user documentation to reflect the new terminology.
- Ensure the documentation is consistent with the UI changes.

* Files to Modify
** Frontend
- `frontend/reporting/src/app/areas/license/license.component.html`
- `frontend/reporting/src/app/areas/license/license.component.ts`
- `frontend/reporting/src/assets/i18n/*.json` (for localization)

** Backend
- `backend/server/src/main/java/com/flowkraft/jobson/license/LicenseService.java`
- `backend/server/src/main/resources/license-messages.properties` (if applicable)

** Documentation
- `docs/user-guide/license.md`

* Code Snippets
** Frontend Example (Before)
```html
<h2>Demo License</h2>
<p>This is a demo version of the software.</p>
```

** Frontend Example (After)
```html
<h2>Community License</h2>
<p>This is the community version of the software.</p>
```

** Localization Example (Before)
```json
{
  "license.demo": "Demo License"
}
```

** Localization Example (After)
```json
{
  "license.community": "Community License"
}
```

* Additional Notes
- Coordinate with the localization team to ensure all language files are updated.
- Verify that the changes do not break any existing functionality.
- Update unit tests to reflect the new terminology.

* Implementation Status
- [ ] Frontend changes
- [ ] Backend changes
- [ ] Documentation updates
- [ ] Localization updates
- [ ] Testing and validation

* Review and Validation
- Share the DDD with the team for review.
- Ensure the implementation meets the acceptance criteria.
- Update the DDD with implementation status and notes during development.

* Post-Implementation
- Move the DDD to the `implemented` folder.
- Add cross-references to the DDD in the requirements document.
