<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 7.1.1 (Python 3.12.6 on win32)" generated="2025-01-28T08:04:14.805414" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="C:\Projects\all-repos\src\prd\rb\asbl\src\uat\tests">
<suite id="s1-s1" name="ReportBurster.exe-prerequisites" source="C:\Projects\all-repos\src\prd\rb\asbl\src\uat\tests\ReportBurster.exe-prerequisites.robot">
<test id="s1-s1-t1" name="Prerequisites Java 8 Installed Should Let The User Know That At Least Java 11 Is Required" line="12">
<kw name="Clean State" type="SETUP">
<msg time="2025-01-28T07:54:41.996066" level="TRACE">Arguments: [  ]</msg>
<kw name="Clean Output Folders And Log Files" owner="utilities">
<msg time="2025-01-28T07:54:41.997067" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:54:41.999065" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:54:41.997067" elapsed="0.001998"/>
</kw>
<kw name="Close ReportBurster Application">
<msg time="2025-01-28T07:54:42.000066" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Reportburster Exe Process" owner="utilities">
<msg time="2025-01-28T07:54:42.000066" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:54:42.009063" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log
No process found with PID: 12736</msg>
<msg time="2025-01-28T07:54:42.009063" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:54:42.000066" elapsed="0.010026"/>
</kw>
<msg time="2025-01-28T07:54:42.010092" level="TRACE">Return: None</msg>
<doc>Close ReportBurster Application</doc>
<status status="PASS" start="2025-01-28T07:54:42.000066" elapsed="0.010026"/>
</kw>
<msg time="2025-01-28T07:54:42.010092" level="TRACE">Return: None</msg>
<doc>Clean Output Folders and Log Files</doc>
<status status="PASS" start="2025-01-28T07:54:41.996066" elapsed="0.014026"/>
</kw>
<kw name="Ensure Chocolatey Is Installed" owner="utilities">
<msg time="2025-01-28T07:54:42.010092" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:54:42.976028" level="INFO">Output of 'choco -v': 2.4.1

Chocolatey is already installed.</msg>
<msg time="2025-01-28T07:54:42.976028" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:54:42.010092" elapsed="0.965936"/>
</kw>
<kw name="Ensure Java Is Installed" owner="utilities">
<msg time="2025-01-28T07:54:42.977010" level="TRACE">Arguments: [ version='8' ]</msg>
<msg time="2025-01-28T07:54:57.639272" level="INFO">Java is not installed. Installing now...
Output of 'choco -v': 2.4.1

Chocolatey is already installed.
Java 8 has been installed.</msg>
<msg time="2025-01-28T07:54:57.639272" level="TRACE">Return: None</msg>
<arg>version=8</arg>
<status status="PASS" start="2025-01-28T07:54:42.977010" elapsed="14.662262"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:54:57.639272" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:54:58.640130" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:54:58.640130" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:54:57.639272" elapsed="1.000858"/>
</kw>
<kw name="Refresh Env Variables" owner="utilities">
<msg time="2025-01-28T07:54:58.642174" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:54:59.300242" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:54:58.641174" elapsed="0.659068"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:54:59.300242" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:55:00.300523" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:55:00.300523" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:54:59.300242" elapsed="1.000281"/>
</kw>
<kw name="Open Electron Application">
<msg time="2025-01-28T07:55:00.304618" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-28T07:55:00.309618" level="TRACE">Arguments: [ 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"' ]</msg>
<msg time="2025-01-28T07:55:00.309618" level="TRACE">Return: 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"'</msg>
<msg time="2025-01-28T07:55:00.309618" level="INFO">${electron_command} = cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222) || start C:\Projects\all-repo...</msg>
<var>${electron_command}</var>
<arg>cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start ${signal_electron.binary_location} --remote-debugging-port=9222) || start ${signal_electron.binary_location} --remote-debugging-port=9222"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-28T07:55:00.304618" elapsed="0.005000"/>
</kw>
<kw name="Get Parent Directory" owner="utilities">
<msg time="2025-01-28T07:55:00.311613" level="TRACE">Arguments: [ 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe' ]</msg>
<msg time="2025-01-28T07:55:00.312613" level="TRACE">Return: 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster'</msg>
<msg time="2025-01-28T07:55:00.312613" level="INFO">${working_dir} = C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster</msg>
<var>${working_dir}</var>
<arg>${signal_electron.binary_location}</arg>
<status status="PASS" start="2025-01-28T07:55:00.310613" elapsed="0.002000"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2025-01-28T07:55:00.313614" level="TRACE">Arguments: [ 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"' | cwd='C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster' | shell='True' ]</msg>
<msg time="2025-01-28T07:55:00.314613" level="INFO">Starting process:
cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222) || start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222"</msg>
<msg time="2025-01-28T07:55:00.314613" level="DEBUG">Process configuration:
cwd:     C:\Projects\all-repos\src\prd\rb\asbl\target\uat\rb\ReportBurster
shell:   True
stdout:  PIPE
stderr:  PIPE
stdin:   None
alias:   None
env:     None</msg>
<msg time="2025-01-28T07:55:00.330558" level="TRACE">Return: &lt;Popen: returncode: None args: 'cmd /c "where /q refreshenv &amp;&amp; (call refresh...&gt;</msg>
<arg>${electron_command}</arg>
<arg>cwd=${working_dir}</arg>
<arg>shell=True</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2025-01-28T07:55:00.313614" elapsed="0.016944"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:55:00.331271" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:55:01.332498" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:55:01.332498" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:55:00.331271" elapsed="1.001227"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-28T07:55:01.332498" level="TRACE">Arguments: [ "sys.modules['selenium.webdriver'].ChromeOptions()" | 'sys, selenium.webdriver' ]</msg>
<msg time="2025-01-28T07:55:01.332498" level="TRACE">Return: &lt;selenium.webdriver.chrome.options.Options object at 0x000002009137D9D0&gt;</msg>
<msg time="2025-01-28T07:55:01.332498" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002009137D9D0&gt;</msg>
<var>${options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-28T07:55:01.332498" elapsed="0.000000"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<msg time="2025-01-28T07:55:01.333498" level="TRACE">Arguments: [ &lt;selenium.webdriver.chrome.options.Options object at 0x000002009137D9D0&gt; | 'add_experimental_option' | 'debuggerAddress' | 'localhost:9222' ]</msg>
<msg time="2025-01-28T07:55:01.333498" level="TRACE">Return: None</msg>
<arg>${options}</arg>
<arg>add_experimental_option</arg>
<arg>debuggerAddress</arg>
<arg>localhost:9222</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2025-01-28T07:55:01.333498" elapsed="0.000000"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2025-01-28T07:55:01.333498" level="TRACE">Arguments: [ 'Chrome' | service=&lt;selenium.webdriver.chrome.service.Service object at 0x00000200901C2C60&gt; | options=&lt;selenium.webdriver.chrome.options.Options object at 0x000002009137D9D0&gt; ]</msg>
<msg time="2025-01-28T07:55:01.333498" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg time="2025-01-28T07:55:01.333498" level="DEBUG">Skipping Selenium Manager; path to chrome driver specified in Service class: C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe</msg>
<msg time="2025-01-28T07:55:01.389768" level="DEBUG">Started executable: `C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe` in a child process with pid: 28336 using 0 to output -3</msg>
<msg time="2025-01-28T07:55:01.906737" level="DEBUG">POST http://localhost:57673/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': &lt;PageLoadStrategy.normal: 'normal'&gt;, 'goog:chromeOptions': {'debuggerAddress': 'localhost:9222', 'extensions': [], 'args': []}}}}</msg>
<msg time="2025-01-28T07:55:01.907737" level="DEBUG">Starting new HTTP connection (1): localhost:57673</msg>
<msg time="2025-01-28T07:55:32.378938" level="DEBUG">http://localhost:57673 "POST /session HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:55:32.378938" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"106.0.5249.103","chrome":{"chromedriverVersion":"106.0.5249.51 (916bca209b16f8c0d4fac47d332c637cf07f2016-refs/heads/main@{#1037919})"},"goog:chromeOptions":{"debuggerAddress":"localhost:9222"},"pageLoadStrategy":"normal","platformName":"","proxy":{},"setWindowRect":false,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"6aef22b380d59579961e2bbbe3d68a01"}} | headers=HTTPHeaderDict({'Content-Length': '665', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:55:32.378938" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:55:32.378938" level="DEBUG">Created Chrome WebDriver instance with session id 6aef22b380d59579961e2bbbe3d68a01.</msg>
<msg time="2025-01-28T07:55:32.379941" level="TRACE">Return: 1</msg>
<arg>Chrome</arg>
<arg>service=${signal_service}</arg>
<arg>options=${options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2025-01-28T07:55:01.333498" elapsed="31.046443"/>
</kw>
<msg time="2025-01-28T07:55:32.379941" level="TRACE">Return: None</msg>
<doc>Open's your electron application by providing browser binary via
C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe and chromedriver binary via C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe
see vars.py for more details.</doc>
<status status="PASS" start="2025-01-28T07:55:00.303624" elapsed="32.076317"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:55:32.380940" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:55:33.381027" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:55:33.381027" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:55:32.379941" elapsed="1.001086"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:55:33.382028" level="TRACE">Arguments: [ 'id=burstFile' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:55:33.383028" level="DEBUG">POST http://localhost:57673/session/6aef22b380d59579961e2bbbe3d68a01/elements {'using': 'css selector', 'value': '[id="burstFile"]'}</msg>
<msg time="2025-01-28T07:55:33.399027" level="DEBUG">http://localhost:57673 "POST /session/6aef22b380d59579961e2bbbe3d68a01/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:55:33.399027" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"e6f050f4-cd18-46b8-a557-62730f908a37"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:55:33.400028" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:55:33.400028" level="TRACE">Return: None</msg>
<arg>id=burstFile</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T07:55:33.381027" elapsed="0.019001"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:55:33.400028" level="TRACE">Arguments: [ 'id=javaInstallationOld' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:55:33.401027" level="DEBUG">POST http://localhost:57673/session/6aef22b380d59579961e2bbbe3d68a01/elements {'using': 'css selector', 'value': '[id="javaInstallationOld"]'}</msg>
<msg time="2025-01-28T07:55:33.410028" level="DEBUG">http://localhost:57673 "POST /session/6aef22b380d59579961e2bbbe3d68a01/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:55:33.410028" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"8d65dc7b-be12-4146-bbcd-617210fb3b58"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:55:33.410028" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:55:33.410028" level="TRACE">Return: None</msg>
<arg>id=javaInstallationOld</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T07:55:33.400028" elapsed="0.010999"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:55:33.411027" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:55:34.411788" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:55:34.411788" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:55:33.411027" elapsed="1.000761"/>
</kw>
<kw name="Ensure Java Is Not Installed" owner="utilities">
<msg time="2025-01-28T07:55:34.412278" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:56:46.608778" level="INFO">Chocolatey is installed. (ensure_java_is_not_installed)
Uninstalling maven with Chocolatey...
Uninstalling Temurin11 with Chocolatey...
Uninstalling Temurin8 with Chocolatey...
Java is not installed on this computer.</msg>
<msg time="2025-01-28T07:56:46.608778" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:55:34.412278" elapsed="72.197489"/>
</kw>
<kw name="Close ReportBurster Application">
<msg time="2025-01-28T07:56:46.609767" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Reportburster Exe Process" owner="utilities">
<msg time="2025-01-28T07:56:46.609767" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:56:46.610769" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log</msg>
<msg time="2025-01-28T07:56:46.610769" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:56:46.609767" elapsed="0.001002"/>
</kw>
<msg time="2025-01-28T07:56:46.611766" level="TRACE">Return: None</msg>
<doc>Close ReportBurster Application</doc>
<status status="PASS" start="2025-01-28T07:56:46.609767" elapsed="0.001999"/>
</kw>
<kw name="Kill Reportburster Exe Process" owner="utilities" type="TEARDOWN">
<msg time="2025-01-28T07:56:46.612770" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:56:46.633406" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log</msg>
<msg time="2025-01-28T07:56:46.633406" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:56:46.612770" elapsed="0.020636"/>
</kw>
<doc>Prerequisites Java 8 Installed Should Let The User Know That At Least Java 11 Is Required</doc>
<status status="PASS" start="2025-01-28T07:54:41.994078" elapsed="124.640332"/>
</test>
<test id="s1-s1-t2" name="Prerequisites Chocolatey Is Installed and Java Not Installed Should Allow User To Install Java" line="27">
<kw name="Clean State" type="SETUP">
<msg time="2025-01-28T07:58:58.970547" level="TRACE">Arguments: [  ]</msg>
<kw name="Clean Output Folders And Log Files" owner="utilities">
<msg time="2025-01-28T07:58:58.970547" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:58:58.972817" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:58:58.970547" elapsed="0.002270"/>
</kw>
<kw name="Close ReportBurster Application">
<msg time="2025-01-28T07:58:58.972817" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Reportburster Exe Process" owner="utilities">
<msg time="2025-01-28T07:58:58.973827" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:58:58.979827" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log
No process found with PID: 28984</msg>
<msg time="2025-01-28T07:58:58.979827" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:58:58.973827" elapsed="0.006000"/>
</kw>
<msg time="2025-01-28T07:58:58.980828" level="TRACE">Return: None</msg>
<doc>Close ReportBurster Application</doc>
<status status="PASS" start="2025-01-28T07:58:58.972817" elapsed="0.008011"/>
</kw>
<msg time="2025-01-28T07:58:58.980828" level="TRACE">Return: None</msg>
<doc>Clean Output Folders and Log Files</doc>
<status status="PASS" start="2025-01-28T07:58:58.970547" elapsed="0.010281"/>
</kw>
<kw name="Ensure Chocolatey Is Installed" owner="utilities">
<msg time="2025-01-28T07:58:58.980828" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:59:00.153130" level="INFO">Output of 'choco -v': 2.4.1

Chocolatey is already installed.</msg>
<msg time="2025-01-28T07:59:00.153130" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:58:58.980828" elapsed="1.172302"/>
</kw>
<kw name="Ensure Java Is Not Installed" owner="utilities">
<msg time="2025-01-28T07:59:00.153130" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:59:02.803633" level="INFO">Chocolatey is installed. (ensure_java_is_not_installed)
Java is not installed on this computer.</msg>
<msg time="2025-01-28T07:59:02.803633" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:59:00.153130" elapsed="2.650503"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:02.804145" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:03.804498" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:03.804498" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:02.804145" elapsed="1.000353"/>
</kw>
<kw name="Refresh Env Variables" owner="utilities">
<msg time="2025-01-28T07:59:03.804498" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T07:59:04.279436" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T07:59:03.804498" elapsed="0.474938"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:04.279436" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:05.280368" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:05.280368" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:04.279436" elapsed="1.000932"/>
</kw>
<kw name="Open Electron Application">
<msg time="2025-01-28T07:59:05.281435" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-28T07:59:05.282402" level="TRACE">Arguments: [ 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"' ]</msg>
<msg time="2025-01-28T07:59:05.282402" level="TRACE">Return: 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"'</msg>
<msg time="2025-01-28T07:59:05.282402" level="INFO">${electron_command} = cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222) || start C:\Projects\all-repo...</msg>
<var>${electron_command}</var>
<arg>cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start ${signal_electron.binary_location} --remote-debugging-port=9222) || start ${signal_electron.binary_location} --remote-debugging-port=9222"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-28T07:59:05.281435" elapsed="0.000967"/>
</kw>
<kw name="Get Parent Directory" owner="utilities">
<msg time="2025-01-28T07:59:05.283379" level="TRACE">Arguments: [ 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe' ]</msg>
<msg time="2025-01-28T07:59:05.283379" level="TRACE">Return: 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster'</msg>
<msg time="2025-01-28T07:59:05.283379" level="INFO">${working_dir} = C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster</msg>
<var>${working_dir}</var>
<arg>${signal_electron.binary_location}</arg>
<status status="PASS" start="2025-01-28T07:59:05.283379" elapsed="0.000000"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2025-01-28T07:59:05.283379" level="TRACE">Arguments: [ 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"' | cwd='C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster' | shell='True' ]</msg>
<msg time="2025-01-28T07:59:05.284402" level="INFO">Starting process:
cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222) || start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222"</msg>
<msg time="2025-01-28T07:59:05.284402" level="DEBUG">Process configuration:
cwd:     C:\Projects\all-repos\src\prd\rb\asbl\target\uat\rb\ReportBurster
shell:   True
stdout:  PIPE
stderr:  PIPE
stdin:   None
alias:   None
env:     None</msg>
<msg time="2025-01-28T07:59:05.289367" level="TRACE">Return: &lt;Popen: returncode: None args: 'cmd /c "where /q refreshenv &amp;&amp; (call refresh...&gt;</msg>
<arg>${electron_command}</arg>
<arg>cwd=${working_dir}</arg>
<arg>shell=True</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2025-01-28T07:59:05.283379" elapsed="0.005988"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:05.289367" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:06.290398" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:06.290398" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:05.289367" elapsed="1.001031"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-28T07:59:06.290398" level="TRACE">Arguments: [ "sys.modules['selenium.webdriver'].ChromeOptions()" | 'sys, selenium.webdriver' ]</msg>
<msg time="2025-01-28T07:59:06.291400" level="TRACE">Return: &lt;selenium.webdriver.chrome.options.Options object at 0x00000200913BF0B0&gt;</msg>
<msg time="2025-01-28T07:59:06.291400" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000200913BF0B0&gt;</msg>
<var>${options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-28T07:59:06.290398" elapsed="0.001002"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<msg time="2025-01-28T07:59:06.291400" level="TRACE">Arguments: [ &lt;selenium.webdriver.chrome.options.Options object at 0x00000200913BF0B0&gt; | 'add_experimental_option' | 'debuggerAddress' | 'localhost:9222' ]</msg>
<msg time="2025-01-28T07:59:06.291400" level="TRACE">Return: None</msg>
<arg>${options}</arg>
<arg>add_experimental_option</arg>
<arg>debuggerAddress</arg>
<arg>localhost:9222</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2025-01-28T07:59:06.291400" elapsed="0.000000"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:06.292398" level="TRACE">Arguments: [ 'Chrome' | service=&lt;selenium.webdriver.chrome.service.Service object at 0x00000200901C2C60&gt; | options=&lt;selenium.webdriver.chrome.options.Options object at 0x00000200913BF0B0&gt; ]</msg>
<msg time="2025-01-28T07:59:06.292398" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg time="2025-01-28T07:59:06.292398" level="DEBUG">Skipping Selenium Manager; path to chrome driver specified in Service class: C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe</msg>
<msg time="2025-01-28T07:59:06.295398" level="DEBUG">Started executable: `C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe` in a child process with pid: 8444 using 0 to output -3</msg>
<msg time="2025-01-28T07:59:06.296414" level="DEBUG">POST http://localhost:57673/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': &lt;PageLoadStrategy.normal: 'normal'&gt;, 'goog:chromeOptions': {'debuggerAddress': 'localhost:9222', 'extensions': [], 'args': []}}}}</msg>
<msg time="2025-01-28T07:59:06.296414" level="DEBUG">Starting new HTTP connection (1): localhost:57673</msg>
<msg time="2025-01-28T07:59:27.822225" level="DEBUG">http://localhost:57673 "POST /session HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:27.822225" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"106.0.5249.103","chrome":{"chromedriverVersion":"106.0.5249.51 (916bca209b16f8c0d4fac47d332c637cf07f2016-refs/heads/main@{#1037919})"},"goog:chromeOptions":{"debuggerAddress":"localhost:9222"},"pageLoadStrategy":"normal","platformName":"","proxy":{},"setWindowRect":false,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"a5ffa2918b455380b67d65dbf03df11a"}} | headers=HTTPHeaderDict({'Content-Length': '665', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:27.822225" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:27.822225" level="DEBUG">Created Chrome WebDriver instance with session id a5ffa2918b455380b67d65dbf03df11a.</msg>
<msg time="2025-01-28T07:59:27.823226" level="TRACE">Return: 5</msg>
<arg>Chrome</arg>
<arg>service=${signal_service}</arg>
<arg>options=${options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2025-01-28T07:59:06.291400" elapsed="21.531826"/>
</kw>
<msg time="2025-01-28T07:59:27.823226" level="TRACE">Return: None</msg>
<doc>Open's your electron application by providing browser binary via
C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe and chromedriver binary via C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe
see vars.py for more details.</doc>
<status status="PASS" start="2025-01-28T07:59:05.281435" elapsed="22.541791"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:27.824197" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:28.825178" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:28.825178" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:27.823226" elapsed="1.001952"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:28.825178" level="TRACE">Arguments: [ 'id=btnInstallJavaTabBurst' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:59:28.826149" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJavaTabBurst"]'}</msg>
<msg time="2025-01-28T07:59:28.843133" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:28.843133" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"31d8bd16-1f35-4826-ad76-ee4f4f040926"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:28.843133" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:28.843133" level="TRACE">Return: None</msg>
<arg>id=btnInstallJavaTabBurst</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T07:59:28.825178" elapsed="0.017955"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:28.844146" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:29.844248" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:29.844248" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:28.844146" elapsed="1.000102"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:29.844248" level="TRACE">Arguments: [ 'id=btnInstallJavaTabBurst' ]</msg>
<msg time="2025-01-28T07:59:29.844248" level="INFO">Clicking button 'id=btnInstallJavaTabBurst'.</msg>
<msg time="2025-01-28T07:59:29.844248" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJavaTabBurst"]'}</msg>
<msg time="2025-01-28T07:59:29.851511" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:29.852518" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"31d8bd16-1f35-4826-ad76-ee4f4f040926"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:29.852518" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:29.852518" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/31d8bd16-1f35-4826-ad76-ee4f4f040926/name {}</msg>
<msg time="2025-01-28T07:59:29.859113" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/element/31d8bd16-1f35-4826-ad76-ee4f4f040926/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:29.859113" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:29.859113" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:29.860116" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJavaTabBurst"]'}</msg>
<msg time="2025-01-28T07:59:29.868145" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:29.868145" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"31d8bd16-1f35-4826-ad76-ee4f4f040926"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:29.868145" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:29.868145" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/31d8bd16-1f35-4826-ad76-ee4f4f040926/name {}</msg>
<msg time="2025-01-28T07:59:29.874316" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/element/31d8bd16-1f35-4826-ad76-ee4f4f040926/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:29.874316" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:29.874316" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:29.874316" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/31d8bd16-1f35-4826-ad76-ee4f4f040926/click {}</msg>
<msg time="2025-01-28T07:59:30.021940" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/element/31d8bd16-1f35-4826-ad76-ee4f4f040926/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:30.021940" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:30.022939" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:30.022939" level="TRACE">Return: None</msg>
<arg>id=btnInstallJavaTabBurst</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T07:59:29.844248" elapsed="0.178691"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:30.023969" level="TRACE">Arguments: [ 'id=btnInstallJava' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:59:30.023969" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T07:59:30.042939" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:30.042939" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"c67b871c-8371-4f8b-ae8e-d96f7db16d68"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:30.042939" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:30.042939" level="TRACE">Return: None</msg>
<arg>id=btnInstallJava</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T07:59:30.023969" elapsed="0.018970"/>
</kw>
<kw name="Page Should Not Contain Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:30.043941" level="TRACE">Arguments: [ 'id=btnInstallChocolatey' ]</msg>
<msg time="2025-01-28T07:59:30.043941" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T07:59:30.056939" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:30.056939" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:30.057940" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:30.057940" level="INFO">Current page does not contain element 'id=btnInstallChocolatey'.</msg>
<msg time="2025-01-28T07:59:30.057940" level="TRACE">Return: None</msg>
<arg>id=btnInstallChocolatey</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<status status="PASS" start="2025-01-28T07:59:30.043941" elapsed="0.013999"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:30.057940" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:31.058116" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:31.058116" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:30.057940" elapsed="1.000176"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:31.058116" level="TRACE">Arguments: [ 'id=btnInstallJava' ]</msg>
<msg time="2025-01-28T07:59:31.058116" level="INFO">Clicking button 'id=btnInstallJava'.</msg>
<msg time="2025-01-28T07:59:31.058116" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T07:59:31.067116" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:31.067116" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"c67b871c-8371-4f8b-ae8e-d96f7db16d68"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:31.067116" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:31.067116" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name {}</msg>
<msg time="2025-01-28T07:59:31.073117" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:31.073117" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:31.074116" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:31.074116" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T07:59:31.081116" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:31.081116" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"c67b871c-8371-4f8b-ae8e-d96f7db16d68"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:31.081116" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:31.081116" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name {}</msg>
<msg time="2025-01-28T07:59:31.088131" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:31.088131" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:31.088131" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:31.088131" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/click {}</msg>
<msg time="2025-01-28T07:59:31.140141" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:31.140141" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:31.140141" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:31.140141" level="TRACE">Return: None</msg>
<arg>id=btnInstallJava</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T07:59:31.058116" elapsed="0.082025"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:31.141149" level="TRACE">Arguments: [ 'css=.dburst-button-question-decline' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:59:31.141149" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T07:59:31.153149" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:31.153149" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0c0e2a9b-7daa-4c64-a23d-f4974ab0e979"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:31.153149" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:31.153149" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-decline</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T07:59:31.141149" elapsed="0.012000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:31.153149" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:32.154601" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:32.154601" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:31.153149" elapsed="1.001452"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:32.155601" level="TRACE">Arguments: [ 'css=.dburst-button-question-decline' ]</msg>
<msg time="2025-01-28T07:59:32.155601" level="INFO">Clicking element 'css=.dburst-button-question-decline'.</msg>
<msg time="2025-01-28T07:59:32.155601" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T07:59:32.162605" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:32.163601" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0c0e2a9b-7daa-4c64-a23d-f4974ab0e979"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:32.163601" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:32.163601" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/0c0e2a9b-7daa-4c64-a23d-f4974ab0e979/click {}</msg>
<msg time="2025-01-28T07:59:32.201602" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/element/0c0e2a9b-7daa-4c64-a23d-f4974ab0e979/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:32.201602" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:32.201602" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:32.201602" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-decline</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T07:59:32.154601" elapsed="0.047001"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:32.202601" level="TRACE">Arguments: [ 'css=.dburst-button-question-decline' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:59:32.202601" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T07:59:32.210602" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:32.210602" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0c0e2a9b-7daa-4c64-a23d-f4974ab0e979"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:32.210602" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:32.210602" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': '0c0e2a9b-7daa-4c64-a23d-f4974ab0e979'}]}</msg>
<msg time="2025-01-28T07:59:32.218610" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/execute/sync HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:32.218610" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:32.218610" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:32.218610" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-decline</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2025-01-28T07:59:32.201602" elapsed="0.017008"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:32.219602" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:33.220307" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:33.220307" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:32.219602" elapsed="1.000705"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:33.220307" level="TRACE">Arguments: [ 'id=btnInstallJava' ]</msg>
<msg time="2025-01-28T07:59:33.221331" level="INFO">Clicking button 'id=btnInstallJava'.</msg>
<msg time="2025-01-28T07:59:33.221331" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T07:59:33.227322" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:33.228312" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"c67b871c-8371-4f8b-ae8e-d96f7db16d68"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:33.228312" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:33.228312" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name {}</msg>
<msg time="2025-01-28T07:59:33.233314" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:33.234314" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:33.234314" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:33.234314" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T07:59:33.243315" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:33.244315" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"c67b871c-8371-4f8b-ae8e-d96f7db16d68"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:33.244315" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:33.244315" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name {}</msg>
<msg time="2025-01-28T07:59:33.251315" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:33.251315" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:33.251315" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:33.251315" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/click {}</msg>
<msg time="2025-01-28T07:59:33.280011" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/element/c67b871c-8371-4f8b-ae8e-d96f7db16d68/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:33.281024" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:33.281024" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:33.281024" level="TRACE">Return: None</msg>
<arg>id=btnInstallJava</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T07:59:33.220307" elapsed="0.060717"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:33.281024" level="TRACE">Arguments: [ 'css=.dburst-button-question-confirm' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T07:59:33.282011" level="DEBUG">POST http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/elements {'using': 'css selector', 'value': '.dburst-button-question-confirm'}</msg>
<msg time="2025-01-28T07:59:33.292065" level="DEBUG">http://localhost:57673 "POST /session/a5ffa2918b455380b67d65dbf03df11a/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T07:59:33.292065" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f58da15c-92ce-4939-9c39-f93d091b12e6"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T07:59:33.292065" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T07:59:33.292065" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-confirm</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T07:59:33.281024" elapsed="0.011041"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T07:59:33.292065" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T07:59:34.292673" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T07:59:34.292673" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T07:59:33.292065" elapsed="1.000608"/>
</kw>
<kw name="Take Named Screenshot If Requested" owner="utilities">
<msg time="2025-01-28T07:59:34.292673" level="TRACE">Arguments: [ ${screenshot_name}='000_05_Prerequisites_ChocoYesJavaNo_InstallJava' ]</msg>
<kw name="Get Environment Variable" owner="OperatingSystem">
<msg time="2025-01-28T07:59:34.293673" level="TRACE">Arguments: [ 'TAKE_SCREENSHOTS' | default='False' ]</msg>
<msg time="2025-01-28T07:59:34.293673" level="TRACE">Return: '1'</msg>
<msg time="2025-01-28T07:59:34.293673" level="INFO">${take_screenshots} = 1</msg>
<var>${take_screenshots}</var>
<arg>TAKE_SCREENSHOTS</arg>
<arg>default=False</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="PASS" start="2025-01-28T07:59:34.293673" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-01-28T07:59:34.293673" level="TRACE">Arguments: [ 'TAKE_SCREENSHOTS value: 1' | level='TRACE' ]</msg>
<msg time="2025-01-28T07:59:34.293673" level="TRACE">TAKE_SCREENSHOTS value: 1</msg>
<msg time="2025-01-28T07:59:34.294674" level="TRACE">Return: None</msg>
<arg>TAKE_SCREENSHOTS value: ${take_screenshots}</arg>
<arg>level=TRACE</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-01-28T07:59:34.293673" elapsed="0.001001"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<msg time="2025-01-28T07:59:34.294674" level="TRACE">Arguments: [ '1' | 'Capture Page Screenshot' | '${screenshot_name}.png' ]</msg>
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2025-01-28T07:59:34.294674" level="TRACE">Arguments: [ '000_05_Prerequisites_ChocoYesJavaNo_InstallJava.png' ]</msg>
<msg time="2025-01-28T07:59:34.294674" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/screenshot {}</msg>
<msg time="2025-01-28T08:00:34.362042" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/screenshot HTTP/1.1" 500 0</msg>
<msg time="2025-01-28T08:00:34.363134" level="DEBUG">Remote response: status=500 | data={"value":{"error":"timeout","message":"timeout: Timed out receiving message from renderer: 10.000\n  (Session info: chrome=106.0.5249.103)","stacktrace":"Backtrace:\n\tCr_z_deflate [0x00007FF6946EC872+125282]\n\tOrdinal0 [0x00007FF69464B9D2+2210258]\n\tOrdinal0 [0x00007FF6945134EB+931051]\n\tOrdinal0 [0x00007FF6945048CD+870605]\n\tOrdinal0 [0x00007FF69450479E+870302]\n\tOrdinal0 [0x00007FF6945035CF+865743]\n\tOrdinal0 [0x00007FF694503E1E+867870]\n\tOrdinal0 [0x00007FF69451AD7C+961916]\n\tOrdinal0 [0x00007FF694580EEE+1380078]\n\tOrdinal0 [0x00007FF69456028A+1245834]\n\tOrdinal0 [0x00007FF694573D3E+1326398]\n\tOrdinal0 [0x00007FF6945600A3+1245347]\n\tOrdinal0 [0x00007FF69453B8A8+1095848]\n\tOrdinal0 [0x00007FF69453C89F+1099935]\n\tCr_z_crc32_z [0x00007FF694A70508+593320]\n\tCr_z_crc32_z [0x00007FF694A63415+539829]\n\tGetHandleVerifier [0x00007FF6947B8D1C+756956]\n\tGetHandleVerifier [0x00007FF6947B7863+751651]\n\tOrdinal0 [0x00007FF694655CDD+2251997]\n\tOrdinal0 [0x00007FF69465BFD4+2277332]\n\tOrdinal0 [0x00007FF69465C105+2277637]\n\tOrdinal0 [0x00007FF6946682BD+2327229]\n\tBaseThreadInitThunk [0x00007FFA57C17374+20]\n\tRtlUserThreadStart [0x00007FFA59C3CC91+33]\n"}} | headers=HTTPHeaderDict({'Content-Length': '1183', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:00:34.363134" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:00:34.364119" level="DEBUG">GET http://localhost:57673/session/a5ffa2918b455380b67d65dbf03df11a/screenshot {}</msg>
<msg time="2025-01-28T08:01:15.023257" level="DEBUG">http://localhost:57673 "GET /session/a5ffa2918b455380b67d65dbf03df11a/screenshot HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:01:15.023257" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '176984', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:01:15.025493" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:01:15.027492" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2025-01-28T08:01:15.027492" level="FAIL">TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=106.0.5249.103)
Stacktrace:
Backtrace:
	Cr_z_deflate [0x00007FF6946EC872+125282]
	Ordinal0 [0x00007FF69464B9D2+2210258]
	Ordinal0 [0x00007FF6945134EB+931051]
	Ordinal0 [0x00007FF6945048CD+870605]
	Ordinal0 [0x00007FF69450479E+870302]
	Ordinal0 [0x00007FF6945035CF+865743]
	Ordinal0 [0x00007FF694503E1E+867870]
	Ordinal0 [0x00007FF69451AD7C+961916]
	Ordinal0 [0x00007FF694580EEE+1380078]
	Ordinal0 [0x00007FF69456028A+1245834]
	Ordinal0 [0x00007FF694573D3E+1326398]
	Ordinal0 [0x00007FF6945600A3+1245347]
	Ordinal0 [0x00007FF69453B8A8+1095848]
	Ordinal0 [0x00007FF69453C89F+1099935]
	Cr_z_crc32_z [0x00007FF694A70508+593320]
	Cr_z_crc32_z [0x00007FF694A63415+539829]
	GetHandleVerifier [0x00007FF6947B8D1C+756956]
	GetHandleVerifier [0x00007FF6947B7863+751651]
	Ordinal0 [0x00007FF694655CDD+2251997]
	Ordinal0 [0x00007FF69465BFD4+2277332]
	Ordinal0 [0x00007FF69465C105+2277637]
	Ordinal0 [0x00007FF6946682BD+2327229]
	BaseThreadInitThunk [0x00007FFA57C17374+20]
	RtlUserThreadStart [0x00007FFA59C3CC91+33]
</msg>
<msg time="2025-01-28T08:01:15.125374" level="DEBUG">Traceback (most recent call last):
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\SeleniumLibrary\__init__.py", line 677, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\robotlibcore.py", line 173, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\SeleniumLibrary\keywords\screenshot.py", line 116, in capture_page_screenshot
    return self._capture_page_screenshot_to_file(filename)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\SeleniumLibrary\keywords\screenshot.py", line 121, in _capture_page_screenshot_to_file
    if not self.driver.save_screenshot(path):
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 843, in save_screenshot
    return self.get_screenshot_as_file(filename)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 819, in get_screenshot_as_file
    png = self.get_screenshot_as_png()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 853, in get_screenshot_as_png
    return b64decode(self.get_screenshot_as_base64().encode("ascii"))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 864, in get_screenshot_as_base64
    return self.execute(Command.SCREENSHOT)["value"]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\selenium\webdriver\remote\webdriver.py", line 384, in execute
    self.error_handler.check_response(response)
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 232, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=106.0.5249.103)
Stacktrace:
Backtrace:
	Cr_z_deflate [0x00007FF6946EC872+125282]
	Ordinal0 [0x00007FF69464B9D2+2210258]
	Ordinal0 [0x00007FF6945134EB+931051]
	Ordinal0 [0x00007FF6945048CD+870605]
	Ordinal0 [0x00007FF69450479E+870302]
	Ordinal0 [0x00007FF6945035CF+865743]
	Ordinal0 [0x00007FF694503E1E+867870]
	Ordinal0 [0x00007FF69451AD7C+961916]
	Ordinal0 [0x00007FF694580EEE+1380078]
	Ordinal0 [0x00007FF69456028A+1245834]
	Ordinal0 [0x00007FF694573D3E+1326398]
	Ordinal0 [0x00007FF6945600A3+1245347]
	Ordinal0 [0x00007FF69453B8A8+1095848]
	Ordinal0 [0x00007FF69453C89F+1099935]
	Cr_z_crc32_z [0x00007FF694A70508+593320]
	Cr_z_crc32_z [0x00007FF694A63415+539829]
	GetHandleVerifier [0x00007FF6947B8D1C+756956]
	GetHandleVerifier [0x00007FF6947B7863+751651]
	Ordinal0 [0x00007FF694655CDD+2251997]
	Ordinal0 [0x00007FF69465BFD4+2277332]
	Ordinal0 [0x00007FF69465C105+2277637]
	Ordinal0 [0x00007FF6946682BD+2327229]
	BaseThreadInitThunk [0x00007FFA57C17374+20]
	RtlUserThreadStart [0x00007FFA59C3CC91+33]</msg>
<arg>${screenshot_name}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="FAIL" start="2025-01-28T07:59:34.294674" elapsed="100.830700">TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=106.0.5249.103)
Stacktrace:
Backtrace:
	Cr_z_deflate [0x00007FF6946EC872+125282]
	Ordinal0 [0x00007FF69464B9D2+2210258]
	Ordinal0 [0x00007FF6945134EB+931051]
	Ordinal0 [0x00007FF6945048CD+870605]
	Ordinal0 [0x00007FF69450479E+870302]
	Ordinal0 [0x00007FF6945035CF+865743]
	Ordinal0 [0x00007FF694503E1E+867870]
	Ordinal0 [0x00007FF69451AD7C+961916]
	Ordinal0 [0x00007FF694580EEE+1380078]
	Ordinal0 [0x00007FF69456028A+1245834]
	Ordinal0 [0x00007FF694573D3E+1326398]
	Ordinal0 [0x00007FF6945600A3+1245347]
	Ordinal0 [0x00007FF69453B8A8+1095848]
	Ordinal0 [0x00007FF69453C89F+1099935]
	Cr_z_crc32_z [0x00007FF694A70508+593320]
	Cr_z_crc32_z [0x00007FF694A63415+539829]
	GetHandleVerifier [0x00007FF6947B8D1C+756956]
	GetHandleVerifier [0x00007FF6947B7863+751651]
	Ordinal0 [0x00007FF694655CDD+2251997]
	Ordinal0 [0x00007FF69465BFD4+2277332]
	Ordinal0 [0x00007FF69465C105+2277637]
	Ordinal0 [0x00007FF6946682BD+2327229]
	BaseThreadInitThunk [0x00007FFA57C17374+20]
	RtlUserThreadStart [0x00007FFA59C3CC91+33]
</status>
</kw>
<arg>${take_screenshots}</arg>
<arg>Capture Page Screenshot</arg>
<arg>${screenshot_name}.png</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2025-01-28T07:59:34.294674" elapsed="100.830700">TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=106.0.5249.103)
Stacktrace:
Backtrace:
	Cr_z_deflate [0x00007FF6946EC872+125282]
	Ordinal0 [0x00007FF69464B9D2+2210258]
	Ordinal0 [0x00007FF6945134EB+931051]
	Ordinal0 [0x00007FF6945048CD+870605]
	Ordinal0 [0x00007FF69450479E+870302]
	Ordinal0 [0x00007FF6945035CF+865743]
	Ordinal0 [0x00007FF694503E1E+867870]
	Ordinal0 [0x00007FF69451AD7C+961916]
	Ordinal0 [0x00007FF694580EEE+1380078]
	Ordinal0 [0x00007FF69456028A+1245834]
	Ordinal0 [0x00007FF694573D3E+1326398]
	Ordinal0 [0x00007FF6945600A3+1245347]
	Ordinal0 [0x00007FF69453B8A8+1095848]
	Ordinal0 [0x00007FF69453C89F+1099935]
	Cr_z_crc32_z [0x00007FF694A70508+593320]
	Cr_z_crc32_z [0x00007FF694A63415+539829]
	GetHandleVerifier [0x00007FF6947B8D1C+756956]
	GetHandleVerifier [0x00007FF6947B7863+751651]
	Ordinal0 [0x00007FF694655CDD+2251997]
	Ordinal0 [0x00007FF69465BFD4+2277332]
	Ordinal0 [0x00007FF69465C105+2277637]
	Ordinal0 [0x00007FF6946682BD+2327229]
	BaseThreadInitThunk [0x00007FFA57C17374+20]
	RtlUserThreadStart [0x00007FFA59C3CC91+33]
</status>
</kw>
<arg>000_05_Prerequisites_ChocoYesJavaNo_InstallJava</arg>
<doc>Takes a screenshot with the given name only if TAKE_SCREENSHOTS env var is set to true</doc>
<status status="FAIL" start="2025-01-28T07:59:34.292673" elapsed="100.832701">TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=106.0.5249.103)
Stacktrace:
Backtrace:
	Cr_z_deflate [0x00007FF6946EC872+125282]
	Ordinal0 [0x00007FF69464B9D2+2210258]
	Ordinal0 [0x00007FF6945134EB+931051]
	Ordinal0 [0x00007FF6945048CD+870605]
	Ordinal0 [0x00007FF69450479E+870302]
	Ordinal0 [0x00007FF6945035CF+865743]
	Ordinal0 [0x00007FF694503E1E+867870]
	Ordinal0 [0x00007FF69451AD7C+961916]
	Ordinal0 [0x00007FF694580EEE+1380078]
	Ordinal0 [0x00007FF69456028A+1245834]
	Ordinal0 [0x00007FF694573D3E+1326398]
	Ordinal0 [0x00007FF6945600A3+1245347]
	Ordinal0 [0x00007FF69453B8A8+1095848]
	Ordinal0 [0x00007FF69453C89F+1099935]
	Cr_z_crc32_z [0x00007FF694A70508+593320]
	Cr_z_crc32_z [0x00007FF694A63415+539829]
	GetHandleVerifier [0x00007FF6947B8D1C+756956]
	GetHandleVerifier [0x00007FF6947B7863+751651]
	Ordinal0 [0x00007FF694655CDD+2251997]
	Ordinal0 [0x00007FF69465BFD4+2277332]
	Ordinal0 [0x00007FF69465C105+2277637]
	Ordinal0 [0x00007FF6946682BD+2327229]
	BaseThreadInitThunk [0x00007FFA57C17374+20]
	RtlUserThreadStart [0x00007FFA59C3CC91+33]
</status>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-confirm</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.125374" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-confirm</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.127781" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.127781" elapsed="0.000000"/>
</kw>
<kw name="Wait For Powershell And Accept Completion" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:01:15.127781" elapsed="0.000000"/>
</kw>
<kw name="Close ReportBurster Application">
<doc>Close ReportBurster Application</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.128808" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.128808" elapsed="0.000000"/>
</kw>
<kw name="Refresh Env Variables" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:01:15.128808" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.128808" elapsed="0.000000"/>
</kw>
<kw name="Open Electron Application">
<doc>Open's your electron application by providing browser binary via
C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe and chromedriver binary via C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe
see vars.py for more details.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.129822" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>id=burstFile</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.130827" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.130827" elapsed="0.000981"/>
</kw>
<kw name="Page Should Not Contain Element" owner="SeleniumLibrary">
<arg>id=btnInstallJavaTabBurst</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.131808" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.131808" elapsed="0.000000"/>
</kw>
<kw name="Ensure Java Is Not Installed" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:01:15.131808" elapsed="0.000000"/>
</kw>
<kw name="Close ReportBurster Application">
<doc>Close ReportBurster Application</doc>
<status status="NOT RUN" start="2025-01-28T08:01:15.132808" elapsed="0.000000"/>
</kw>
<kw name="Kill Reportburster Exe Process" owner="utilities" type="TEARDOWN">
<msg time="2025-01-28T08:01:15.132808" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:01:15.133873" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log</msg>
<msg time="2025-01-28T08:01:15.133873" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T08:01:15.132808" elapsed="0.001065"/>
</kw>
<doc>Prerequisites Chocolatey Is Installed and Java Not Installed Should Allow User To Install Java</doc>
<status status="FAIL" start="2025-01-28T07:58:58.962547" elapsed="136.172905">TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000
  (Session info: chrome=106.0.5249.103)
Stacktrace:
Backtrace:
	Cr_z_deflate [0x00007FF6946EC872+125282]
	Ordinal0 [0x00007FF69464B9D2+2210258]
	Ordinal0 [0x00007FF6945134EB+931051]
	Ordinal0 [0x00007FF6945048CD+870605]
	Ordinal0 [0x00007FF69450479E+870302]
	Ordinal0 [0x00007FF6945035CF+865743]
	Ordinal0 [0x00007FF694503E1E+867870]
	Ordinal0 [0x00007FF69451AD7C+961916]
	Ordinal0 [0x00007FF694580EEE+1380078]
	Ordinal0 [0x00007FF69456028A+1245834]
	Ordinal0 [0x00007FF694573D3E+1326398]
	Ordinal0 [0x00007FF6945600A3+1245347]
	Ordinal0 [0x00007FF69453B8A8+1095848]
	Ordinal0 [0x00007FF69453C89F+1099935]
	Cr_z_crc32_z [0x00007FF694A70508+593320]
	Cr_z_crc32_z [0x00007FF694A63415+539829]
	GetHandleVerifier [0x00007FF6947B8D1C+756956]
	GetHandleVerifier [0x00007FF6947B7863+751651]
	Ordinal0 [0x00007FF694655CDD+2251997]
	Ordinal0 [0x00007FF69465BFD4+2277332]
	Ordinal0 [0x00007FF69465C105+2277637]
	Ordinal0 [0x00007FF6946682BD+2327229]
	BaseThreadInitThunk [0x00007FFA57C17374+20]
	RtlUserThreadStart [0x00007FFA59C3CC91+33]

[RETRY] FAIL on 3. retry.</status>
</test>
<test id="s1-s1-t3" name="Prerequisites Chocolatey Not Installed and Java Not Installed Should Allow User to Install Chocolatey and Then Java" line="68">
<kw name="Clean State" type="SETUP">
<msg time="2025-01-28T08:03:48.666496" level="TRACE">Arguments: [  ]</msg>
<kw name="Clean Output Folders And Log Files" owner="utilities">
<msg time="2025-01-28T08:03:48.667497" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:03:48.668498" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T08:03:48.667497" elapsed="0.001001"/>
</kw>
<kw name="Close ReportBurster Application">
<msg time="2025-01-28T08:03:48.669498" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Reportburster Exe Process" owner="utilities">
<msg time="2025-01-28T08:03:48.669498" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:03:48.685497" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log
No process found with PID: 8244</msg>
<msg time="2025-01-28T08:03:48.685497" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T08:03:48.669498" elapsed="0.015999"/>
</kw>
<msg time="2025-01-28T08:03:48.685497" level="TRACE">Return: None</msg>
<doc>Close ReportBurster Application</doc>
<status status="PASS" start="2025-01-28T08:03:48.669498" elapsed="0.015999"/>
</kw>
<msg time="2025-01-28T08:03:48.685497" level="TRACE">Return: None</msg>
<doc>Clean Output Folders and Log Files</doc>
<status status="PASS" start="2025-01-28T08:03:48.666496" elapsed="0.020001"/>
</kw>
<kw name="Ensure Java Is Not Installed" owner="utilities">
<msg time="2025-01-28T08:03:48.686497" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:03:48.710499" level="INFO">Chocolatey is not installed. (ensure_java_is_not_installed)
Java is not installed on this computer.</msg>
<msg time="2025-01-28T08:03:48.711497" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T08:03:48.686497" elapsed="0.025000"/>
</kw>
<kw name="Ensure Chocolatey Is Not Installed" owner="utilities">
<msg time="2025-01-28T08:03:48.711497" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:03:48.732497" level="INFO">Chocolatey is not installed.</msg>
<msg time="2025-01-28T08:03:48.733496" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T08:03:48.711497" elapsed="0.021999"/>
</kw>
<kw name="Open Electron Application">
<msg time="2025-01-28T08:03:48.734496" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-28T08:03:48.736496" level="TRACE">Arguments: [ 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"' ]</msg>
<msg time="2025-01-28T08:03:48.736496" level="TRACE">Return: 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"'</msg>
<msg time="2025-01-28T08:03:48.736496" level="INFO">${electron_command} = cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222) || start C:\Projects\all-repo...</msg>
<var>${electron_command}</var>
<arg>cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start ${signal_electron.binary_location} --remote-debugging-port=9222) || start ${signal_electron.binary_location} --remote-debugging-port=9222"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-28T08:03:48.734496" elapsed="0.002000"/>
</kw>
<kw name="Get Parent Directory" owner="utilities">
<msg time="2025-01-28T08:03:48.737496" level="TRACE">Arguments: [ 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe' ]</msg>
<msg time="2025-01-28T08:03:48.737496" level="TRACE">Return: 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster'</msg>
<msg time="2025-01-28T08:03:48.737496" level="INFO">${working_dir} = C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster</msg>
<var>${working_dir}</var>
<arg>${signal_electron.binary_location}</arg>
<status status="PASS" start="2025-01-28T08:03:48.736496" elapsed="0.001000"/>
</kw>
<kw name="Start Process" owner="Process">
<msg time="2025-01-28T08:03:48.737496" level="TRACE">Arguments: [ 'cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222) || start C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster\\ReportBurster.exe --remote-debugging-port=9222"' | cwd='C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\target/uat/rb/ReportBurster' | shell='True' ]</msg>
<msg time="2025-01-28T08:03:48.738497" level="INFO">Starting process:
cmd /c "where /q refreshenv &amp;&amp; (call refreshenv &amp;&amp; start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222) || start C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe --remote-debugging-port=9222"</msg>
<msg time="2025-01-28T08:03:48.738497" level="DEBUG">Process configuration:
cwd:     C:\Projects\all-repos\src\prd\rb\asbl\target\uat\rb\ReportBurster
shell:   True
stdout:  PIPE
stderr:  PIPE
stdin:   None
alias:   None
env:     None</msg>
<msg time="2025-01-28T08:03:48.740497" level="TRACE">Return: &lt;Popen: returncode: None args: 'cmd /c "where /q refreshenv &amp;&amp; (call refresh...&gt;</msg>
<arg>${electron_command}</arg>
<arg>cwd=${working_dir}</arg>
<arg>shell=True</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2025-01-28T08:03:48.737496" elapsed="0.003001"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:03:48.740497" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:03:49.740686" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:03:49.740686" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:03:48.740497" elapsed="1.000189"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-28T08:03:49.740686" level="TRACE">Arguments: [ "sys.modules['selenium.webdriver'].ChromeOptions()" | 'sys, selenium.webdriver' ]</msg>
<msg time="2025-01-28T08:03:49.740686" level="TRACE">Return: &lt;selenium.webdriver.chrome.options.Options object at 0x0000020091405850&gt;</msg>
<msg time="2025-01-28T08:03:49.741686" level="INFO">${options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020091405850&gt;</msg>
<var>${options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-28T08:03:49.740686" elapsed="0.001000"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<msg time="2025-01-28T08:03:49.741686" level="TRACE">Arguments: [ &lt;selenium.webdriver.chrome.options.Options object at 0x0000020091405850&gt; | 'add_experimental_option' | 'debuggerAddress' | 'localhost:9222' ]</msg>
<msg time="2025-01-28T08:03:49.741686" level="TRACE">Return: None</msg>
<arg>${options}</arg>
<arg>add_experimental_option</arg>
<arg>debuggerAddress</arg>
<arg>localhost:9222</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2025-01-28T08:03:49.741686" elapsed="0.000000"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2025-01-28T08:03:49.742690" level="TRACE">Arguments: [ 'Chrome' | service=&lt;selenium.webdriver.chrome.service.Service object at 0x00000200901C2C60&gt; | options=&lt;selenium.webdriver.chrome.options.Options object at 0x0000020091405850&gt; ]</msg>
<msg time="2025-01-28T08:03:49.742690" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<msg time="2025-01-28T08:03:49.742690" level="DEBUG">Skipping Selenium Manager; path to chrome driver specified in Service class: C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe</msg>
<msg time="2025-01-28T08:03:49.745689" level="DEBUG">Started executable: `C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe` in a child process with pid: 23832 using 0 to output -3</msg>
<msg time="2025-01-28T08:03:49.747688" level="DEBUG">POST http://localhost:57673/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': &lt;PageLoadStrategy.normal: 'normal'&gt;, 'goog:chromeOptions': {'debuggerAddress': 'localhost:9222', 'extensions': [], 'args': []}}}}</msg>
<msg time="2025-01-28T08:03:49.748687" level="DEBUG">Starting new HTTP connection (1): localhost:57673</msg>
<msg time="2025-01-28T08:04:07.445016" level="DEBUG">http://localhost:57673 "POST /session HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:07.445016" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"106.0.5249.103","chrome":{"chromedriverVersion":"106.0.5249.51 (916bca209b16f8c0d4fac47d332c637cf07f2016-refs/heads/main@{#1037919})"},"goog:chromeOptions":{"debuggerAddress":"localhost:9222"},"pageLoadStrategy":"normal","platformName":"","proxy":{},"setWindowRect":false,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"a83f7c04e0182e099fe1516ba841b7c4"}} | headers=HTTPHeaderDict({'Content-Length': '665', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:07.446051" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:07.446051" level="DEBUG">Created Chrome WebDriver instance with session id a83f7c04e0182e099fe1516ba841b7c4.</msg>
<msg time="2025-01-28T08:04:07.446051" level="TRACE">Return: 9</msg>
<arg>Chrome</arg>
<arg>service=${signal_service}</arg>
<arg>options=${options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2025-01-28T08:03:49.741686" elapsed="17.704365"/>
</kw>
<msg time="2025-01-28T08:04:07.446051" level="TRACE">Return: None</msg>
<doc>Open's your electron application by providing browser binary via
C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe and chromedriver binary via C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe
see vars.py for more details.</doc>
<status status="PASS" start="2025-01-28T08:03:48.734496" elapsed="18.711555"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:04:07.447008" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:04:08.447242" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:04:08.447242" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:04:07.446051" elapsed="1.001191"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:08.447242" level="TRACE">Arguments: [ 'id=btnInstallJavaTabBurst' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:08.448229" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallJavaTabBurst"]'}</msg>
<msg time="2025-01-28T08:04:08.459199" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:08.459199" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"b6863b6a-7c0b-41ba-8f3e-089474fd0a1f"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:08.459199" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:08.459199" level="TRACE">Return: None</msg>
<arg>id=btnInstallJavaTabBurst</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T08:04:08.447242" elapsed="0.011957"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:04:08.460227" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:04:09.460837" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:04:09.460837" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:04:08.460227" elapsed="1.000610"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:09.461305" level="TRACE">Arguments: [ 'id=btnInstallJavaTabBurst' ]</msg>
<msg time="2025-01-28T08:04:09.461305" level="INFO">Clicking button 'id=btnInstallJavaTabBurst'.</msg>
<msg time="2025-01-28T08:04:09.461305" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallJavaTabBurst"]'}</msg>
<msg time="2025-01-28T08:04:09.467097" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.467097" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"b6863b6a-7c0b-41ba-8f3e-089474fd0a1f"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.467097" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.467097" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/b6863b6a-7c0b-41ba-8f3e-089474fd0a1f/name {}</msg>
<msg time="2025-01-28T08:04:09.472096" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/b6863b6a-7c0b-41ba-8f3e-089474fd0a1f/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.473096" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.473096" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.473096" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallJavaTabBurst"]'}</msg>
<msg time="2025-01-28T08:04:09.478097" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.478097" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"b6863b6a-7c0b-41ba-8f3e-089474fd0a1f"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.478097" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.478097" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/b6863b6a-7c0b-41ba-8f3e-089474fd0a1f/name {}</msg>
<msg time="2025-01-28T08:04:09.482520" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/b6863b6a-7c0b-41ba-8f3e-089474fd0a1f/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.482520" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.482520" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.482520" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/b6863b6a-7c0b-41ba-8f3e-089474fd0a1f/click {}</msg>
<msg time="2025-01-28T08:04:09.625150" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/element/b6863b6a-7c0b-41ba-8f3e-089474fd0a1f/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.625150" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.625150" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.625150" level="TRACE">Return: None</msg>
<arg>id=btnInstallJavaTabBurst</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T08:04:09.461305" elapsed="0.164839"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:09.626144" level="TRACE">Arguments: [ 'id=btnInstallChocolatey' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:09.626144" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T08:04:09.639490" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.639490" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"7b541e35-8232-43f3-9351-cc5b72153791"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.639490" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.639490" level="TRACE">Return: None</msg>
<arg>id=btnInstallChocolatey</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T08:04:09.626144" elapsed="0.013346"/>
</kw>
<kw name="Element Should Be Enabled" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:09.640518" level="TRACE">Arguments: [ 'id=btnInstallChocolatey' ]</msg>
<msg time="2025-01-28T08:04:09.640518" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T08:04:09.656540" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.656540" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"7b541e35-8232-43f3-9351-cc5b72153791"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.656540" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.657588" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/enabled {}</msg>
<msg time="2025-01-28T08:04:09.668587" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/enabled HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.668587" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.668587" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.668587" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/execute/sync {'script': '/* getAttribute */return (function(){return (function(){var d=this||self;function f(a,b){function c(...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': '7b541e35-8232-43f3-9351-cc5b72153791'}, 'readonly']}</msg>
<msg time="2025-01-28T08:04:09.675551" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/execute/sync HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.675551" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.675551" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.676568" level="TRACE">Return: None</msg>
<arg>id=btnInstallChocolatey</arg>
<doc>Verifies that element identified by ``locator`` is enabled.</doc>
<status status="PASS" start="2025-01-28T08:04:09.640518" elapsed="0.036050"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:09.677591" level="TRACE">Arguments: [ 'id=btnInstallJava' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:09.677591" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T08:04:09.699537" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.699537" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3165abf9-34db-46bb-9b8f-161bb0ba65e3"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.699537" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.699537" level="TRACE">Return: None</msg>
<arg>id=btnInstallJava</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T08:04:09.676568" elapsed="0.022969"/>
</kw>
<kw name="Element Should Be Disabled" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:09.700541" level="TRACE">Arguments: [ 'id=btnInstallJava' ]</msg>
<msg time="2025-01-28T08:04:09.700541" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallJava"]'}</msg>
<msg time="2025-01-28T08:04:09.708539" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.708539" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3165abf9-34db-46bb-9b8f-161bb0ba65e3"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.708539" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.708539" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/3165abf9-34db-46bb-9b8f-161bb0ba65e3/enabled {}</msg>
<msg time="2025-01-28T08:04:09.718590" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/3165abf9-34db-46bb-9b8f-161bb0ba65e3/enabled HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:09.718590" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:09.718590" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:09.718590" level="TRACE">Return: None</msg>
<arg>id=btnInstallJava</arg>
<doc>Verifies that element identified by ``locator`` is disabled.</doc>
<status status="PASS" start="2025-01-28T08:04:09.700541" elapsed="0.018049"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:04:09.718590" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:04:10.719683" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:04:10.719683" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:04:09.718590" elapsed="1.001093"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:10.720183" level="TRACE">Arguments: [ 'id=btnInstallChocolatey' ]</msg>
<msg time="2025-01-28T08:04:10.720183" level="INFO">Clicking button 'id=btnInstallChocolatey'.</msg>
<msg time="2025-01-28T08:04:10.720183" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T08:04:10.727214" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:10.727214" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"7b541e35-8232-43f3-9351-cc5b72153791"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:10.727214" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:10.727214" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name {}</msg>
<msg time="2025-01-28T08:04:10.732385" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:10.732385" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:10.732385" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:10.732385" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T08:04:10.738388" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:10.738388" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"7b541e35-8232-43f3-9351-cc5b72153791"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:10.738388" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:10.738388" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name {}</msg>
<msg time="2025-01-28T08:04:10.742384" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:10.742384" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:10.742384" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:10.742384" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/click {}</msg>
<msg time="2025-01-28T08:04:10.786044" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:10.787043" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:10.787043" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:10.787043" level="TRACE">Return: None</msg>
<arg>id=btnInstallChocolatey</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T08:04:10.720183" elapsed="0.066860"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:10.788056" level="TRACE">Arguments: [ 'css=.dburst-button-question-decline' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:10.788056" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T08:04:10.799397" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:10.799397" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"d801f4f7-1a72-418c-9c71-d10dcf1a2faa"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:10.799397" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:10.799397" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-decline</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T08:04:10.788056" elapsed="0.011341"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:04:10.799397" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:04:11.800026" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:04:11.800026" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:04:10.799397" elapsed="1.000629"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:11.801072" level="TRACE">Arguments: [ 'css=.dburst-button-question-decline' ]</msg>
<msg time="2025-01-28T08:04:11.801072" level="INFO">Clicking element 'css=.dburst-button-question-decline'.</msg>
<msg time="2025-01-28T08:04:11.801072" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T08:04:11.809999" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:11.809999" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"d801f4f7-1a72-418c-9c71-d10dcf1a2faa"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:11.809999" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:11.809999" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/d801f4f7-1a72-418c-9c71-d10dcf1a2faa/click {}</msg>
<msg time="2025-01-28T08:04:11.849305" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/element/d801f4f7-1a72-418c-9c71-d10dcf1a2faa/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:11.849305" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:11.850306" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:11.850306" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-decline</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T08:04:11.800026" elapsed="0.050280"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:11.851306" level="TRACE">Arguments: [ 'css=.dburst-button-question-decline' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:11.851306" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T08:04:11.858330" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:11.858330" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"d801f4f7-1a72-418c-9c71-d10dcf1a2faa"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:11.858330" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:11.859371" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'd801f4f7-1a72-418c-9c71-d10dcf1a2faa'}]}</msg>
<msg time="2025-01-28T08:04:11.867970" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/execute/sync HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:11.867970" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:11.867970" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:12.068829" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-decline'}</msg>
<msg time="2025-01-28T08:04:12.088946" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:12.089944" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:12.089944" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:12.089944" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-decline</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2025-01-28T08:04:11.851306" elapsed="0.238638"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:04:12.091944" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:04:13.092343" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:04:13.092343" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:04:12.090943" elapsed="1.001400"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:13.094420" level="TRACE">Arguments: [ 'id=btnInstallChocolatey' ]</msg>
<msg time="2025-01-28T08:04:13.095058" level="INFO">Clicking button 'id=btnInstallChocolatey'.</msg>
<msg time="2025-01-28T08:04:13.095113" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T08:04:13.109470" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:13.109470" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"7b541e35-8232-43f3-9351-cc5b72153791"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:13.109470" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:13.110516" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name {}</msg>
<msg time="2025-01-28T08:04:13.114125" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:13.114125" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:13.114125" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:13.115123" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '[id="btnInstallChocolatey"]'}</msg>
<msg time="2025-01-28T08:04:13.121127" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:13.121127" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"7b541e35-8232-43f3-9351-cc5b72153791"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:13.121127" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:13.121127" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name {}</msg>
<msg time="2025-01-28T08:04:13.126122" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/name HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:13.126122" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:13.126122" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:13.126122" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/click {}</msg>
<msg time="2025-01-28T08:04:13.154742" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/element/7b541e35-8232-43f3-9351-cc5b72153791/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:13.154742" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:13.154742" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:13.154742" level="TRACE">Return: None</msg>
<arg>id=btnInstallChocolatey</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T08:04:13.094232" elapsed="0.060510"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:13.155779" level="TRACE">Arguments: [ 'css=.dburst-button-question-confirm' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:13.155779" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-confirm'}</msg>
<msg time="2025-01-28T08:04:13.166214" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:13.166214" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"e117f104-f3fe-4b3b-9ab7-d08f667a1377"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:13.166214" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:13.166214" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-confirm</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-01-28T08:04:13.155779" elapsed="0.010435"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-01-28T08:04:13.167259" level="TRACE">Arguments: [ '1s' ]</msg>
<msg time="2025-01-28T08:04:14.168023" level="INFO">Slept 1 second.</msg>
<msg time="2025-01-28T08:04:14.168023" level="TRACE">Return: None</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-01-28T08:04:13.167259" elapsed="1.000764"/>
</kw>
<kw name="Take Named Screenshot If Requested" owner="utilities">
<msg time="2025-01-28T08:04:14.170095" level="TRACE">Arguments: [ ${screenshot_name}='000_05_Prerequisites_ChocoNoJavaNo_InstallChoco' ]</msg>
<kw name="Get Environment Variable" owner="OperatingSystem">
<msg time="2025-01-28T08:04:14.172039" level="TRACE">Arguments: [ 'TAKE_SCREENSHOTS' | default='False' ]</msg>
<msg time="2025-01-28T08:04:14.172039" level="TRACE">Return: '1'</msg>
<msg time="2025-01-28T08:04:14.172039" level="INFO">${take_screenshots} = 1</msg>
<var>${take_screenshots}</var>
<arg>TAKE_SCREENSHOTS</arg>
<arg>default=False</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<status status="PASS" start="2025-01-28T08:04:14.171043" elapsed="0.001994"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-01-28T08:04:14.174093" level="TRACE">Arguments: [ 'TAKE_SCREENSHOTS value: 1' | level='TRACE' ]</msg>
<msg time="2025-01-28T08:04:14.174093" level="TRACE">TAKE_SCREENSHOTS value: 1</msg>
<msg time="2025-01-28T08:04:14.174093" level="TRACE">Return: None</msg>
<arg>TAKE_SCREENSHOTS value: ${take_screenshots}</arg>
<arg>level=TRACE</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-01-28T08:04:14.173037" elapsed="0.001056"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<msg time="2025-01-28T08:04:14.175168" level="TRACE">Arguments: [ '1' | 'Capture Page Screenshot' | '${screenshot_name}.png' ]</msg>
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:14.175168" level="TRACE">Arguments: [ '000_05_Prerequisites_ChocoNoJavaNo_InstallChoco.png' ]</msg>
<msg time="2025-01-28T08:04:14.175168" level="DEBUG">GET http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/screenshot {}</msg>
<msg time="2025-01-28T08:04:14.309414" level="DEBUG">http://localhost:57673 "GET /session/a83f7c04e0182e099fe1516ba841b7c4/screenshot HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:14.309414" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '180936', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:14.311509" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:14.312458" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="000_05_Prerequisites_ChocoNoJavaNo_InstallChoco.png"&gt;&lt;img src="000_05_Prerequisites_ChocoNoJavaNo_InstallChoco.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2025-01-28T08:04:14.312458" level="TRACE">Return: 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\src\\uat\\results\\000_05_Prerequisites_ChocoNoJavaNo_InstallChoco.png'</msg>
<arg>${screenshot_name}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2025-01-28T08:04:14.175168" elapsed="0.137290"/>
</kw>
<msg time="2025-01-28T08:04:14.313417" level="TRACE">Return: 'C:\\Projects\\all-repos\\src\\prd\\rb\\asbl\\src\\uat\\results\\000_05_Prerequisites_ChocoNoJavaNo_InstallChoco.png'</msg>
<arg>${take_screenshots}</arg>
<arg>Capture Page Screenshot</arg>
<arg>${screenshot_name}.png</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-01-28T08:04:14.175168" elapsed="0.138249"/>
</kw>
<msg time="2025-01-28T08:04:14.313417" level="TRACE">Return: None</msg>
<arg>000_05_Prerequisites_ChocoNoJavaNo_InstallChoco</arg>
<doc>Takes a screenshot with the given name only if TAKE_SCREENSHOTS env var is set to true</doc>
<status status="PASS" start="2025-01-28T08:04:14.169098" elapsed="0.144319"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:14.313417" level="TRACE">Arguments: [ 'css=.dburst-button-question-confirm' ]</msg>
<msg time="2025-01-28T08:04:14.313417" level="INFO">Clicking element 'css=.dburst-button-question-confirm'.</msg>
<msg time="2025-01-28T08:04:14.313417" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-confirm'}</msg>
<msg time="2025-01-28T08:04:14.321417" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:14.321417" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"e117f104-f3fe-4b3b-9ab7-d08f667a1377"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:14.321417" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:14.321417" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/element/e117f104-f3fe-4b3b-9ab7-d08f667a1377/click {}</msg>
<msg time="2025-01-28T08:04:14.356415" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/element/e117f104-f3fe-4b3b-9ab7-d08f667a1377/click HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:14.356415" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:14.356415" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:14.356415" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-confirm</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2025-01-28T08:04:14.313417" elapsed="0.044000"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<msg time="2025-01-28T08:04:14.357417" level="TRACE">Arguments: [ 'css=.dburst-button-question-confirm' | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg time="2025-01-28T08:04:14.357417" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-confirm'}</msg>
<msg time="2025-01-28T08:04:14.374432" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:14.374432" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"e117f104-f3fe-4b3b-9ab7-d08f667a1377"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:14.375418" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:14.375418" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/execute/sync {'script': '/* isDisplayed */return (function(){return (function(){var g=this||self;\nfunction aa(a){var b=typeof...', 'args': [{'element-6066-11e4-a52e-4f735466cecf': 'e117f104-f3fe-4b3b-9ab7-d08f667a1377'}]}</msg>
<msg time="2025-01-28T08:04:14.386427" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/execute/sync HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:14.386427" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:14.386427" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:14.586939" level="DEBUG">POST http://localhost:57673/session/a83f7c04e0182e099fe1516ba841b7c4/elements {'using': 'css selector', 'value': '.dburst-button-question-confirm'}</msg>
<msg time="2025-01-28T08:04:14.593958" level="DEBUG">http://localhost:57673 "POST /session/a83f7c04e0182e099fe1516ba841b7c4/elements HTTP/1.1" 200 0</msg>
<msg time="2025-01-28T08:04:14.593958" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg time="2025-01-28T08:04:14.593958" level="DEBUG">Finished Request</msg>
<msg time="2025-01-28T08:04:14.593958" level="TRACE">Return: None</msg>
<arg>css=.dburst-button-question-confirm</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" start="2025-01-28T08:04:14.357417" elapsed="0.236541"/>
</kw>
<kw name="Wait For Powershell And Accept Completion" owner="utilities">
<msg time="2025-01-28T08:04:14.594942" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:04:14.595920" level="FAIL">PyAutoGUIException: PyAutoGUI was unable to import pyscreeze. (This is likely because you're running a version of Python that Pillow (which pyscreeze depends on) doesn't support currently.) Please install this module to enable the function you tried to call.</msg>
<msg time="2025-01-28T08:04:14.595920" level="DEBUG">Traceback (most recent call last):
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\resources\utilities.py", line 266, in wait_for_powershell_and_accept_completion
    button_location = pyautogui.locateOnScreen(image_path, grayscale=True, confidence=.8)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\all-repos\src\prd\rb\asbl\src\uat\.venv\Lib\site-packages\pyautogui\__init__.py", line 228, in _couldNotImportPyScreeze
    raise PyAutoGUIException(
pyautogui.PyAutoGUIException: PyAutoGUI was unable to import pyscreeze. (This is likely because you're running a version of Python that Pillow (which pyscreeze depends on) doesn't support currently.) Please install this module to enable the function you tried to call.</msg>
<status status="FAIL" start="2025-01-28T08:04:14.594942" elapsed="0.000978">PyAutoGUIException: PyAutoGUI was unable to import pyscreeze. (This is likely because you're running a version of Python that Pillow (which pyscreeze depends on) doesn't support currently.) Please install this module to enable the function you tried to call.</status>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.595920" elapsed="0.000000"/>
</kw>
<kw name="Close ReportBurster Application">
<doc>Close ReportBurster Application</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.596920" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.596920" elapsed="0.000000"/>
</kw>
<kw name="Refresh Env Variables" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:04:14.596920" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.597920" elapsed="0.000000"/>
</kw>
<kw name="Open Electron Application">
<doc>Open's your electron application by providing browser binary via
C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe and chromedriver binary via C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe
see vars.py for more details.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.597920" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.598919" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>id=btnInstallJavaTabBurst</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.599947" elapsed="0.000000"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<arg>id=btnInstallJavaTabBurst</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.599947" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>id=btnInstallJava</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.600893" elapsed="0.000000"/>
</kw>
<kw name="Element Should Be Enabled" owner="SeleniumLibrary">
<arg>id=btnInstallJava</arg>
<doc>Verifies that element identified by ``locator`` is enabled.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.600893" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.600893" elapsed="0.000000"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<arg>id=btnInstallJava</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.600893" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-decline</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.601936" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.601936" elapsed="0.000000"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-decline</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.601936" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-decline</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.602930" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.602930" elapsed="0.000000"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<arg>id=btnInstallJava</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.602930" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-confirm</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.602930" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.603931" elapsed="0.000000"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-confirm</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.603931" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Element Is Not Visible" owner="SeleniumLibrary">
<arg>css=.dburst-button-question-confirm</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.603931" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.604935" elapsed="0.000000"/>
</kw>
<kw name="Wait For Powershell And Accept Completion" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:04:14.604935" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.604935" elapsed="0.000000"/>
</kw>
<kw name="Close ReportBurster Application">
<doc>Close ReportBurster Application</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.605937" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.605937" elapsed="0.000000"/>
</kw>
<kw name="Refresh Env Variables" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:04:14.605937" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.606907" elapsed="0.000000"/>
</kw>
<kw name="Open Electron Application">
<doc>Open's your electron application by providing browser binary via
C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\ReportBurster.exe and chromedriver binary via C:\Projects\all-repos\src\prd\rb\frontend/reporting/node_modules/electron-chromedriver/bin/chromedriver.exe
see vars.py for more details.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.606907" elapsed="0.000000"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>id=burstFile</arg>
<arg>timeout=30</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.607931" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.607931" elapsed="0.000000"/>
</kw>
<kw name="Page Should Not Contain Element" owner="SeleniumLibrary">
<arg>id=btnInstallJavaTabBurst</arg>
<doc>Verifies that element ``locator`` is not found on the current page.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.608921" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.608921" elapsed="0.000000"/>
</kw>
<kw name="Ensure Java Is Not Installed" owner="utilities">
<status status="NOT RUN" start="2025-01-28T08:04:14.608921" elapsed="0.000000"/>
</kw>
<kw name="Close ReportBurster Application">
<doc>Close ReportBurster Application</doc>
<status status="NOT RUN" start="2025-01-28T08:04:14.609920" elapsed="0.000000"/>
</kw>
<kw name="Kill Reportburster Exe Process" owner="utilities" type="TEARDOWN">
<msg time="2025-01-28T08:04:14.609920" level="TRACE">Arguments: [  ]</msg>
<msg time="2025-01-28T08:04:14.610917" level="INFO">Log file path: C:\Projects\all-repos\src\prd\rb\asbl\target/uat/rb/ReportBurster\logs\electron.log</msg>
<msg time="2025-01-28T08:04:14.610917" level="TRACE">Return: None</msg>
<status status="PASS" start="2025-01-28T08:04:14.609920" elapsed="0.000997"/>
</kw>
<doc>Chocolatey Not Installed and Java Not Installed Should Allow User to Install Chocolatey and Then Java</doc>
<status status="FAIL" start="2025-01-28T08:03:48.664496" elapsed="25.947415">PyAutoGUIException: PyAutoGUI was unable to import pyscreeze. (This is likely because you're running a version of Python that Pillow (which pyscreeze depends on) doesn't support currently.) Please install this module to enable the function you tried to call.
[RETRY] FAIL on 3. retry.</status>
</test>
<status status="FAIL" start="2025-01-28T07:54:41.394935" elapsed="573.247558"/>
</suite>
<status status="FAIL" start="2025-01-28T07:54:41.378934" elapsed="573.291641"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="2" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1" name="ReportBurster.exe-prerequisites">Tests.ReportBurster.exe-prerequisites</stat>
</suite>
</statistics>
<errors>
<msg time="2025-01-28T07:58:58.954923" level="WARN" html="true">Test '&lt;a onclick="makeElementVisible('s1-s1-t2')" href="#s1-s1-t2" title="Link to details"&gt;Prerequisites Chocolatey Is Installed and Java Not Installed Should Allow User To Install Java&lt;/a&gt;' has been retried 3 times (max: 3).</msg>
<msg time="2025-01-28T08:03:48.662497" level="WARN" html="true">Test '&lt;a onclick="makeElementVisible('s1-s1-t3')" href="#s1-s1-t3" title="Link to details"&gt;Prerequisites Chocolatey Not Installed and Java Not Installed Should Allow User to Install Chocolatey and Then Java&lt;/a&gt;' has been retried 3 times (max: 3).</msg>
</errors>
</robot>
