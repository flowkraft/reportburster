# -----------------------------------------------------------------------------
# Vanna Application Configuration
# All settings are managed here. The docker-compose.yml file just loads this file.
# -----------------------------------------------------------------------------

# --- LLM / AI Provider Configuration ---
# Select the LLM vendor to use. The llm_connector.py will use this value.
# Supported options in your connector: openrouter, openai, gemini
LLM_VENDOR="openrouter"

# --- API Keys (fill in for the vendors you use) ---
OPENROUTER_API_KEY="your-openrouter-api-key-goes-here"
OPENAI_API_KEY="sk-..."
GEMINI_API_KEY="..."
# ANTHROPIC_API_KEY="..."

# --- Model Configuration ---
# The specific model name to use from the selected provider.
LLM_MODEL_NAME="mistralai/mistral-7b-instruct"

# The Base URL (required for OpenAI-compatible endpoints like OpenRouter)
OPENAI_API_BASE="https://openrouter.ai/api/v1"


# --- Jupyter Notebook Configuration ---
JUPYTER_TOKEN="reportburster"


# --- Database Connection Configuration ---
# The db_connector.py script reads these variables to connect.
# Only one database block should be active (uncommented) at a time.

# --- ACTIVE: SQLite ---
DB_TYPE="sqlite"
DB_CONNECTIONSTRING="data/Chinook.sqlite" # Path inside the container
DB_DATABASE="chinook_sqlite" # Used as the Vanna model name for vector storage

# --- EXAMPLE: MySQL ---
# DB_TYPE="mysql"
# DB_HOST="mysql-db"
# DB_PORT="3306"
# DB_DATABASE="northwind"
# DB_USERID="root"
# DB_USERPASSWORD="reportburster"

# --- EXAMPLE: PostgreSQL ---
# DB_TYPE="postgres"
# DB_HOST="your-postgres-host"
# DB_PORT="5432"
# DB_DATABASE="your-db"
# DB_USERID="your-user"
# DB_USERPASSWORD="your-password"