services:
  cms-webportal-playground:
    image: wordpress:6.8.2-php8.4-apache
    container_name: cms-webportal-playground
    depends_on:
      - cms-webportal-playground-db
    ports:
      - "8080:80"
    volumes:
      - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./logs-wp/apache2:/var/log/apache2
      - ./wp-plugins:/var/www/html/wp-content/plugins
      - ./wp-themes/reportburster-sage:/var/www/html/wp-content/themes/reportburster-sage
      - wp_html:/var/www/html
    env_file:
      - .env
    restart: unless-stopped

  cms-webportal-playground-db:
    image: mysql:8.0
    container_name: cms-webportal-playground-db
    volumes:
      - ./data-db:/var/lib/mysql
      - ./logs-db:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE:      ${MYSQL_DATABASE}
      MYSQL_USER:          ${MYSQL_USER}
      MYSQL_PASSWORD:      ${MYSQL_PASSWORD}
    restart: unless-stopped

  cms-webportal-playground-cli:
    build:
      context: .
      dockerfile: Dockerfile.cli
    container_name: cms-webportal-playground-cli
    user: root
    environment:
      - WP_CLI_ALLOW_ROOT=1
    depends_on:
      - cms-webportal-playground
    volumes:
      - ./wp-plugins:/var/www/html/wp-content/plugins
      - ./wp-themes/reportburster-sage:/var/www/html/wp-content/themes/reportburster-sage
      - ./scripts:/var/www/html/scripts
      - wp_html:/var/www/html
    env_file:
      - .env
    restart: "no"
    command: >
      /bin/sh -c '

        # Increase Composer timeout globally to prevent unzip hangs
        composer config --global process-timeout 600  # Increase to 10 minutes

        echo "⏳ Waiting for Wordpress core files…";
        while [ ! -f /var/www/html/wp-settings.php ]; do sleep 2; done

        echo "🔐 Waiting for wp-content to settle…";
        # you could check owner=33 or just sleep a few seconds
        sleep 3

        echo "🔧 Fixing permissions…";
        chown -R www-data:www-data /var/www/html/wp-content
        chmod -R u+rwX            /var/www/html/wp-content

        echo "🕓 Waiting for the database to be responsive…";
        until mysqladmin ping \
          --host="${WORDPRESS_DB_HOST}" \
          --user="${WORDPRESS_DB_USER}" \
          --password="${WORDPRESS_DB_PASSWORD}" \
          --protocol=TCP --skip-ssl --silent > /dev/null 2>&1; do
          sleep 2;
        done

        sleep 2;

        echo "🚀 Checking WordPress install...";

        if ! wp core is-installed; then
          wp core install \
            --path="/var/www/html" \
            --url="${WP_SITE_URL}" \
            --title="${WP_SITE_TITLE}" \
            --admin_user="${WP_ADMIN_USER}" \
            --admin_password="${WP_ADMIN_PASSWORD}" \
            --admin_email="${WP_ADMIN_EMAIL}";

          echo "🎯 Installing theme (first run only)…";
          THEME_DIR="/var/www/html/wp-content/themes/reportburster-sage"
          if [ ! -f "$$THEME_DIR/composer.json" ]; then
            rm -rf "$$THEME_DIR"
            # Add retry and error handling for Composer
            if ! composer create-project roots/sage "$$THEME_DIR" --no-interaction --no-progress; then
              echo "Composer create-project failed, retrying with increased timeout...";
              composer config --global process-timeout 1200  # Increase to 20 minutes for retry
              composer create-project roots/sage "$$THEME_DIR" --no-interaction --no-progress || echo "Theme installation failed, skipping.";
            fi
            chown -R www-data:www-data "$$THEME_DIR"
          fi
        
          echo "🧹 Removing default bundled plugins…";
          wp plugin is-installed akismet && wp plugin delete akismet || true
          wp plugin is-installed hello   && wp plugin delete hello   || true

          echo "📦 Ensuring Composer deps for custom plugin…";
          PLUGIN_PATH="/var/www/html/wp-content/plugins/reportburster-integration"
          if [ -d "$$PLUGIN_PATH" ]; then
            if [ ! -f "$$PLUGIN_PATH/vendor/autoload.php" ]; then
              echo "Running composer install for reportburster-integration...";
              # Add retry and error handling
              if ! (cd "$$PLUGIN_PATH" && composer install --no-interaction --prefer-dist --no-progress); then
                echo "Composer install failed for plugin, retrying...";
                (cd "$$PLUGIN_PATH" && composer install --no-interaction --prefer-dist --no-progress) || echo "Plugin composer install failed, plugin may not activate.";
              fi
            fi
            wp plugin is-active reportburster-integration || wp plugin activate reportburster-integration || echo "Plugin activation failed.";
          fi

          ensure() {
            SLUG="$$1"; VER="$$2"; ACTIVATE="$$3";
            if ! wp plugin is-installed "$$SLUG"; then
              if [ -n "$$VER" ]; then
                wp plugin install "$$SLUG" --version="$$VER" $${ACTIVATE:+--activate}
              else
                wp plugin install "$$SLUG" $${ACTIVATE:+--activate}
              fi
            else
              if [ "$$ACTIVATE" = "yes" ]; then
                wp plugin is-active "$$SLUG" || wp plugin activate "$$SLUG" || true
              fi
            fi
          }

          echo "🎯 Installing / Ensuring plugins (grouped & idempotent)…";

          echo "== Installing Content Types & Fields Plugins ==";
          ensure pods 3.3.3 yes
          # ensure gravityforms 2.9.0
          # ensure pods-gravity-forms 1.4.4

          echo "== Installing ReportBurster Integration (Depends on Pods) Plugins ==";
          # already handled above

          echo "== Installing Site and Admin Management Plugins ==";
          # ensure matomo 5.3.1
          # ensure burst-statistics 2.1.0
          # ensure jwt-authentication-for-wp-rest-api 1.3.8
          # ensure members 3.2.18
          # ensure adminimize 1.11.11
          # ensure wp-phpmyadmin-extension 5.2.2.01
          # ensure updraftplus 1.25.6
          # ensure loginpress 4.0.1
          # ensure oauth2-provider 4.4.0
          # ensure redux-framework 4.5.7

          echo "== Installing Spam / Security Plugins ==";
          # ensure antispam-bee 2.11.7

          echo "== Installing Contact Forms and Enhancements Plugins ==";
          # ensure forminator 1.44.3
          # ensure contact-form-7 6.1
          # ensure contact-form-7-paypal-add-on 2.4.3
          # ensure contact-form-cfdb7 1.3.1
          # ensure contact-form-7-simple-recaptcha 0.1.6
          # ensure cf7-grid-layout 4.15.8

          echo "== Installing Email Management Plugins ==";
          # ensure fluent-smtp 2.2.90

          echo "== Installing Developer Tools and Utilities Plugins ==";
          ensure query-monitor 3.20.0
          # ensure font-awesome 5.0.2
          # ensure codepress-admin-columns 4.7.7

          echo "== Installing Social / Community (Optional) Plugins ==";
          # ensure buddypress 14.3.4

          echo "== Installing LMS / Donation (Optional) Plugins ==";
          # ensure give 4.4.0
          # ensure tutor 3.6.3
          # ensure learnpress 4.2.8.7.3

          echo "== Installing Search & Indexing (Optional) Plugins ==";
          # ensure facetwp 4.3.2
          # ensure relevanssi 4.22.1
          # ensure add-search-to-menu 1.3.1
          # ensure search-filter 1.2.16
          # ensure elasticpress 5.0.3

          echo "== Installing Permalinks / Structure (Optional) Plugins ==";
          # ensure custom-post-type-permalinks 3.5.1

          echo "🔐 Ensuring custom roles…";
          wp role exists employee || wp role create employee 'Employee' --clone=subscriber
          wp role exists customer || wp role create customer 'Customer' --clone=subscriber

          echo "📝 Provisioning demo content types and sample data…"
          wp eval-file /var/www/html/scripts/provision-content-types-and-sample-data.php

          echo \"🔧 Updating site URLs…\";
          wp option update home    \"${WP_SITE_URL}\";
          wp option update siteurl \"${WP_SITE_URL}\";
          
        fi

        echo \"✅ Provisioning complete.\";
      '

  sage-theme-builder:
    image: node:20-bullseye
    container_name: sage-theme-builder
    depends_on:
      cms-webportal-playground-cli:
        condition: service_completed_successfully
    working_dir: /var/www/html/wp-content/themes/reportburster-sage
    volumes:
      - ./wp-themes/reportburster-sage:/var/www/html/wp-content/themes/reportburster-sage
      - wp_html:/var/www/html
    environment:
      - FORCE_BUILD=${FORCE_BUILD:-false}
    command: >
      /bin/sh -c '
        # always npm install on first run, or when FORCE_BUILD=true
        if [ ! -d node_modules ] || [ "$FORCE_BUILD" = "true" ]; then
          npm install;
        fi

        # always rebuild if manifest missing, or if FORCE_BUILD=true
        if [ ! -f public/build/manifest.json ] || [ "$FORCE_BUILD" = "true" ]; then
          npm run build;
        fi
      '
    restart: "no"

volumes:
  wp_html:
