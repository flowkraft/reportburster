<appendix id="appendix.howto">
	<title>How to Do This and That</title>
	<section>
		<title>How To Distribute External Reports?</title>
		<para>
			Sometimes it might be required to distribute existing
			reports which
			are pre-generated
			and already contain (only) the relevant data
			for the
			intended
			recipient. Such reports don't require any further
			splitting
			but only to
			be distributed, without any modification, to the
			proper
			destination. This
			destination might be email
			or any other
			destination
			type which is
			currently
			supported by
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			(e.g. FTP, SFTP, etc.).
		</para>
		<para>
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			can be configured to distribute
			external/existing documents
			which do
			not require splitting.
			<warning>
				<para>
					When distributing external reports
					<emphasis>
						<trademark>DocumentBurster</trademark>
					</emphasis>
					doesn't perform any splitting so you need
					to make sure
					that the
					reports contain
					(only) the
					relevant data for the intended
					recipients.
				</para>
			</warning>
		</para>
		<section>
			<title>Configuration</title>
			<para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/attachments-settings1.png"
							format="PNG" />
					</imageobject>
				</mediaobject>
			</para>
			<para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/attachments-settings2.png"
							format="PNG" />
					</imageobject>
				</mediaobject>
			</para>
			<para>
				<emphasis>$extracted_file_path$</emphasis>
				is the default configuration. This should
				be changed with a dynamic
				value to be filled at run-time (e.g.
				<emphasis>$var0$</emphasis>
				user variable).
			</para>
			<para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/distribute-external-reports.png"
							format="PNG" />
					</imageobject>
				</mediaobject>
			</para>
			<para>
				<emphasis>$var0$</emphasis>
				should be configured to point to the appropriate document
				path to be
				distributed for each recipient. The external documents can be in
				any
				format, including
				PDF, Excel, Word, CSV,Txt, Xml or any other
				report
				format.
			</para>
		</section>
		<section>
			<title>Recipients List and Document(s) Paths</title>
			<para>
				There are two different ways to configure the recipients list
				and the
				path to the document(s) to be distributed to each
				separate
				recipient.
				<itemizedlist>
					<listitem>Provide the recipients and the document(s) paths
						in an
						Excel sheet
					</listitem>
					<listitem>Provide the recipients and the document(s) paths
						in a PDF
						report
					</listitem>
				</itemizedlist>
			</para>
			<note>
				<para>
					These are two different ways for achieving the same business
					requirements.
					The alternative which is best fitting the
					needs should
					be used.
				</para>
			</note>
			<section>
				<title>Provide the recipients and the document(s) paths
					in an Excel
					sheet
				</title>
				<para>
					When using Excel for configuration
					<itemizedlist>
						<listitem>
							Recipients list can be provided using the
							<emphasis>(*)burstTokens</emphasis>
							column from the metadata
							<emphasis>
								burst
							</emphasis>
							sheet
						</listitem>
						<listitem>
							The paths to the document(s) to be distributed can be provided
							using
							user variables, more
							specifically using the
							<emphasis>userVariables</emphasis>
							column from the metadata
							<emphasis>burst</emphasis>
							sheet.
							For example, mapping
							<emphasis>$var0$</emphasis>
							user variable to the path
							of the document to be distributed, it is
							possible to distribute
							a separate report to each distinct
							recipient/burst token.
						</listitem>
					</itemizedlist>
				</para>
				<para>
					Check the existing sample report
					<filename>samples/Distribute-External-Files.xls</filename>
					which can
					be found in
					<filename class="directory">samples</filename>
					folder.
					<filename>Distribute-External-Files.xls</filename>
					report contains a list of recipients together
					with the relevant
					report to be distributed to each one of them.
				</para>
				<para>
					<mediaobject>
						<imageobject>
							<imagedata fileref="images/distribute-external-reports-excel.png"
								format="PNG" />
						</imageobject>
					</mediaobject>
				</para>
				<para>
					The document paths are dynamically mapped using the
					<emphasis>$var0$</emphasis>
					user variable. In this sample
					<itemizedlist>
						<listitem>
							<emphasis>clyde.grew@northridgehealth.org</emphasis>
							will receive by
							email
							<filename>samples/Invoices-Oct.pdf</filename>
							,
						</listitem>
						<listitem>
							<emphasis>kyle.butford@northridgehealth.org</emphasis>
							will get
							<filename>samples/Invoices-Nov.pdf</filename>
							and
						</listitem>
						<listitem>
							<emphasis>alfreda.waldback@northridgehealth.org</emphasis>
							will get
							<filename>samples/Invoices-Dec.pdf.</filename>
						</listitem>
					</itemizedlist>
				</para>
				<note>
					<title>Fetch recipients list from other data sources</title>
					<para>
						If required, using Excel, it should be possible to fetch the
						recipients
						list
						and the document(s) paths from
						other data sources.
					</para>
					<para>
						Excel has the capability to connect and fetch data from
						various data sources
						including SQL Server, Oracle,
						Microsoft Access,
						MySQL and most of
						the existing database types. Using Excel it is
						also possible
						to fetch
						data from existing Xml, CSV, Txt or other
						Excel reports.
					</para>
					<para>
						For more details on how to use Excel to connect to an
						external
						data source, please consult
						the official Microsoft Excel
						documentation.
					</para>
				</note>
			</section>
			<section>
				<title>Provide the recipients list and the document(s) paths
					in
					a
					PDF
					report
				</title>
				<para>
					As an alternative to Excel, it is also possible to provide
					the
					recipients and the document(s) paths in a PDF report. This
					might be
					convenient
					when there is already in place an automated
					PDF based
					reporting
					system which can generate the recipients list.
				</para>
				<para>
					The PDF report should contain one distinct page for each
					intended recipient and each page should
					contain all the details
					required for
					the specific recipient (including the path(s) to the
					document(s) to be distributed).
				</para>
				<para>
					Check the existing sample report
					<filename>samples/Distribute-External-Files.pdf</filename>
					which can
					be found in
					<filename class="directory">samples</filename>
					folder.
					<filename>Distribute-External-Files.pdf</filename>
					report has three pages, each page containing the path to the
					document to be
					distributed to the corresponding recipient
					<itemizedlist>
						<listitem>
							<emphasis>clyde.grew@northridgehealth.org</emphasis>
							,
						</listitem>
						<listitem>
							<emphasis>kyle.butford@northridgehealth.org</emphasis>
							and
						</listitem>
						<listitem>
							<emphasis>alfreda.waldback@northridgehealth.org</emphasis>
						</listitem>
					</itemizedlist>
				</para>
			</section>
		</section>
	</section>
	<section id="appendix.howto.conditional">
		<title>How To Implement Conditional Report Distribution?</title>
		<para>
			Using
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			it is possible to implement
			<emphasis>conditional report delivery</emphasis>
			.
			While
			bursting the reports,
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			can check and can distribute only
			those reports which fail to meet a
			specified
			user defined condition and can be configured to skip the
			delivery for
			the reports which meet the condition.
		</para>
		<para>
			<emphasis role="bold">
				Use case example
			</emphasis>
		</para>
		<para>
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			can be deployed and can be easily configured to act as
			a
			<emphasis>management by exception</emphasis>
			reporting system which will alert
			the management team only for the
			cases
			where the minimum performance levels are not met.
		</para>
		<para>For example, the management of your organization might
			require
			for getting each morning
			only the reports for the sales with very
			low
			profit
			margins or for the transactions with
			deviations from the
			approved
			discounts.
		</para>
		<para>
			<emphasis role="bold">
				Configuration
			</emphasis>
		</para>
		<para>
			By default, if configured to distribute reports,
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			will
			deliver to the relevant recipients all reports which are being
			generated during the bursting process. The default behavior can be
			changed, and
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			can be configured to skip the report distribution, by placing a text
			which has the pattern similar with
			<emphasis>&lt;skip&gt;true&lt;/skip&gt;</emphasis>
			in each of the output documents
			which should be skipped for report
			distribution.
		</para>
		<note>
			<para>
				The same result can be achieved by
				using the shorter (while being
				less expressive) pattern
				<emphasis>&lt;s&gt;true&lt;/s&gt;.</emphasis>
			</para>
		</note>
		<para>
			If configured to distribute reports,
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			will
			distribute to the relevant recipients all the reports which are
			being
			generated during the bursting
			process and for which
			<emphasis>
				<trademark>DocumentBurster</trademark>
			</emphasis>
			:
			<itemizedlist>
				<listitem>
					Is not able to find any explicit positive skip instruction like
					<emphasis>&lt;skip&gt;true&lt;/skip&gt;</emphasis>
					<emphasis>(or &lt;s&gt;true&lt;/s&gt;)</emphasis>
					which have the meaning to skip the distribution for the current
					report
				</listitem>
				<listitem>
					Finds an explicit negative skip instruction like
					<emphasis>&lt;skip&gt;false&lt;/skip&gt;</emphasis>
					<emphasis>(or &lt;s&gt;false&lt;/s&gt;)</emphasis>
					which have the meaning to distribute the current report
				</listitem>
				<listitem>
					Doesn't find any (positive or negative) skip instruction
				</listitem>
			</itemizedlist>
		</para>
		<important>
			<para>
				Depending on the requirements, the report
				writer software
				should
				properly fill the appropriate
				<emphasis>&lt;skip&gt;true/false&lt;/skip&gt;</emphasis>
				tags into the reports which needs to be burst
				and distributed.
				Usually the value
				<emphasis>(true/false)</emphasis>
				from within the
				<emphasis>&lt;skip&gt;true/false&lt;/skip&gt;</emphasis>
				instruction tags will be calculated
				by a formula defined in the
				report writer engine and having a business meaning such as:
				<itemizedlist>
					<listitem>Very low profit margins</listitem>
					<listitem>Discounts higher than the maximum approved ones
					</listitem>
					<listitem>Low inventory levels</listitem>
					<listitem>Production runs with very high scrap rates</listitem>
					<listitem>Any other formula which makes business sense for your
						organization
					</listitem>
				</itemizedlist>
			</para>
		</important>
		<section>
			<title>skip_current_file_distribution_if.groovy</title>
			<para>
				This sample script can be used to achieve complex
				<emphasis>conditional
					report
					delivery
				</emphasis>
				scenarios.
			</para>
			<para>
				<emphasis>
					<trademark>DocumentBurster</trademark>
				</emphasis>
				's
				built-in capabilities (skip instruction) can be used to achieve
				many
				conditional distribution
				scenarios while this sample script
				<filename>(scripts/burst/samples/skip_current_file_distribution_if.groovy)
				</filename>
				should be used for achieving the remaining and more complex
				situations which cannot be easily implemented using the built-in
				<emphasis>skip</emphasis>
				instruction approach.
			</para>
			<para>
				This sample script can be used to achieve
				<emphasis>conditional report
					distribution
				</emphasis>
				in situations similar with the following
				<itemizedlist>
					<listitem>
						The condition to skip the distribution cannot be achieved
						using a
						<emphasis>skip</emphasis>
						report formula (e.g. skip the delivery for files which are
						bigger
						than 20MB)
					</listitem>
					<listitem>
						The condition to skip the distribution is too complex and
						it might
						be more convenient to describe this condition in scripting than
						with
						a
						<emphasis>skip</emphasis>
						report
						formula
					</listitem>
					<listitem>
						The input report cannot be modified (for whatever reason) to
						accommodate any
						<emphasis>skip</emphasis>
						instruction
					</listitem>
				</itemizedlist>
			</para>
			<para>
				<filename>skip_current_file_distribution_if.groovy</filename>
				approach
				is described in detail
				in
				<ulink
					url="https://www.pdfburst.com/docs/html/advanced/chapter.scripting.html#skip_current_file_distribution_if.groovy">skip_current_file_distribution_if.groovy</ulink>
				from
				<citetitle>
					<trademark>DocumentBurster</trademark>
					- Advanced
					Report Delivery
					Scenarios.
				</citetitle>
			</para>
		</section>
	</section>
</appendix>