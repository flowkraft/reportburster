{
  "name": "reportburster",
  "productName": "ReportBurster",
  "description": "ReportBurster is a report distribution software for bursting reports like invoices, statements and payslips in order to distribute by email, FTP, web or file share relevant parts to each of your customers, partners and employees.",
  "version": "10.1.0",
  "copyright": "2024, FlowKraft Systems & Consulting Ltd.",
  "homepage": "https://www.pdfburst.com",
  "license": "Server Side Public License (SSPL)",
  "author": {
    "name": "FlowKraft Systems & Consulting Ltd",
    "email": "contact@reportburster.org"
  },
  "main": "app/main.js",
  "private": true,
  "scripts": {
    "postinstall": "electron-builder install-app-deps",
    "ng": "ng",
    "start": "npm-run-all -p electron:serve ng:serve",
    "ng:serve": "ng serve -c web -o",
    "build": "npm run electron:serve-tsc && cross-env NODE_OPTIONS=--max_old_space_size=6144 ng build --base-href ./ --verbose > build.log",
    "build:dev": "npm run build -- -c dev",
    "build:prod": "npm run build -- -c production",
    "web:build": "npm run build -- -c web-production",
    "electron": "electron",
    "electron:serve-tsc": "tsc -p tsconfig.serve.json",
    "electron:serve": "wait-on tcp:4200 && npm run electron:serve-tsc && electron . --serve --stack_trace_limit=100",
    "electron:local": "npm run build:prod && electron .",
    "electron:build": "npm run build:prod && electron-builder build --publish=never",
    "test": "ng test --watch=false",
    "test:watch": "ng test",
    "e2e": "npm run build:prod && playwright test -c e2e/playwright.config.ts e2e/",
    "e2e:show-trace": "playwright show-trace e2e/tracing/trace.zip",
    "version": "conventional-changelog -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",
    "lint": "ng lint",
    "custom:e2e-electron": "npm run build:prod && npx gulp e2e-package-javastuff-if-needed && cross-env TEST_ENV=electron TEST_LICENSE_KEY=51b0aa18f2bbc066efdca8b53c2dacc8 RUNNING_IN_E2E=true PORTABLE_EXECUTABLE_DIR=testground/e2e playwright test -c e2e/playwright.config.ts e2e/",
    "custom:e2e-web": "wait-on tcp:4201 && cross-env TEST_ENV=web TEST_LICENSE_KEY=51b0aa18f2bbc066efdca8b53c2dacc8 RUNNING_IN_E2E=true PORTABLE_EXECUTABLE_DIR=testground/e2e playwright test -c e2e/playwright.config.ts e2e/",
    "custom:start-server-and-e2e-web": "npm-run-all -p custom:start-server-and-ui-web custom:e2e-web",
    "precustom:start-server-and-e2e-electron": "npm run custom:test-upgrade",
    "custom:start-server-and-e2e-electron": "npm-run-all -p custom:start-server-and-ui-electron custom:e2e-electron",
    "custom:start-javano-chocono-and-ui": "npx gulp e2e-package-javastuff-if-needed && npx gulp utils:start-javano-chocono-and-ui",
    "custom:start-javano-chocoyes-and-ui": "npx gulp e2e-package-javastuff-if-needed && npx gulp utils:start-javano-chocoyes-and-ui",
    "custom:e2e-show-trace": "npx playwright show-trace e2e/tracing/trace.zip",
    "custom:e2e-debug": "npm run custom:e2e -- --debug",
    "custom:e2e-rename-ts2ignore": "cd e2e && npx renamer --find .spec.ts --replace .spec.ignore **",
    "custom:e2e-rename-ignore2ts": "cd e2e && npx renamer --find .spec.ignore --replace .spec.ts **",
    "custom:e2e-rename-done2ts": "cd e2e && npx renamer --find .spec.done --replace .spec.ts **",
    "custom:storybook": "ng run angular-electron:storybook",
    "custom:clean-node-modules": "rimraf node_modules",
    "custom:clean-output": "rimraf dist && rimraf release && rimraf testground",
    "custom:compile-all": "cd ../.. && mvn clean install -DskipTests",
    "custom:compile-server": "cd ../../backend/server && mvn clean install -DskipTests",
    "custom:ng:serve": "ng serve -c web --port 4201 -o --proxy-config proxy.conf.json",
    "custom:ng:serve:electron": "cross-env TARGET=electron ng serve",
    "custom:start-server": "npm run custom:compile-server && cd ../../backend/server && mvn spring-boot:run -Dspring-boot.run.arguments='-serve' -Dspring-boot.run.jvmArguments=\"-DPORTABLE_EXECUTABLE_DIR=../../frontend/reporting/testground/e2e -Dserver.port=9090\"",
    "custom:start-ui-both": "npx gulp e2e-package-javastuff-if-needed && cross-env PORTABLE_EXECUTABLE_DIR=testground/e2e ENABLE_DEVELOPMENT_FEATURES=true npm-run-all -p custom:ng:serve custom:ng:serve:electron electron:serve",
    "custom:start-ui-web": "npx gulp e2e-package-javastuff-if-needed && npm run custom:ng:serve",
    "custom:start-ui-electron": "npx gulp e2e-package-javastuff-if-needed && cross-env PORTABLE_EXECUTABLE_DIR=testground/e2e ENABLE_DEVELOPMENT_FEATURES=true npm-run-all -p custom:ng:serve:electron electron:serve",
    "custom:start-server-and-ui-both": "npx gulp utils:start-server-and-ui-both",
    "custom:start-server-and-ui-web": "npx gulp utils:start-server-and-ui-web",
    "custom:start-server-and-ui-electron": "npx gulp utils:start-server-and-ui-electron",
    "custom:show-stats-memory": "cross-env NODE_OPTIONS=--max_old_space_size=4096 npx gulp utils:show-stats-memory",
    "precustom:icons-iconmaker": "ie4uinit.exe -ClearIconCache && ie4uinit.exe -show && rimraf testground/fontawesome2png && font-awesome-svg-png --icons paper-plane-o --color steelblue --sizes 1024 --dest testground/fontawesome2png",
    "custom:icons-iconmaker": "rimraf testground/icons && electron-icon-maker --input=testground/fontawesome2png/steelblue/png/1024/paper-plane-o.png --output=testground",
    "custom:test-upgrade": "cross-env PORTABLE_EXECUTABLE_DIR=testground/upgrade SHOULD_SEND_STATS=false ts-node --project e2e/tsconfig.e2e.json node_modules/jasmine/bin/jasmine --config=scripts-dev/jasmine/jasmine-updater-all.json",
    "custom:test-upgrade-cuna": "cross-env PORTABLE_EXECUTABLE_DIR=testground/upgrade SHOULD_SEND_STATS=false ts-node --project e2e/tsconfig.e2e.json node_modules/jasmine/bin/jasmine --config=scripts-dev/jasmine/jasmine-updater-cuna.json",
    "custom:test-upgrade-leidos": "cross-env PORTABLE_EXECUTABLE_DIR=testground/upgrade SHOULD_SEND_STATS=false ts-node --project e2e/tsconfig.e2e.json node_modules/jasmine/bin/jasmine --config=scripts-dev/jasmine/jasmine-updater-leidos.json",
    "custom:e2e-prepare-letmeupdate-for-manual-testing": "rimraf testground && mkdirp testground/e2e && npx gulp e2e-package-javastuff-if-needed && cross-env PORTABLE_EXECUTABLE_DIR=testground/upgrade SHOULD_SEND_STATS=false ts-node --project e2e/tsconfig.e2e.json node_modules/jasmine/bin/jasmine --config=scripts-dev/jasmine/jasmine-updater-letme.json && npx gulp e2e-copy-dbexe-to-letme-baseline",
    "custom:e2e-prepare-updatenow-for-manual-testing": "rimraf testground && mkdirp testground/e2e && npx gulp e2e-package-javastuff-if-needed && cross-env PORTABLE_EXECUTABLE_DIR=testground/upgrade SHOULD_SEND_STATS=false ts-node node_modules/jasmine/bin/jasmine --config=scripts-dev/jasmine/jasmine-updater-now.json && npx gulp e2e-prepare-updatenow-for-manual-testing",
    "custom:electron:windows": "npm run build:prod && electron-builder build --windows --ia32",
    "precustom:release-electron": "npm run custom:clean-output && npm prune",
    "custom:release-electron": "npm run custom:electron:windows",
    "custom:release-web": "rimraf dist && ng build -c web-production"
  },
  "dependencies": {
    "@angular/common": "15.2.9",
    "@angular/compiler": "15.2.9",
    "@angular/core": "15.2.9",
    "@angular/forms": "15.2.9",
    "@angular/language-service": "15.2.9",
    "@angular/platform-browser": "15.2.9",
    "@angular/platform-browser-dynamic": "15.2.9",
    "@angular/router": "15.2.9",
    "@electron/remote": "2.0.8",
    "@fortawesome/fontawesome-free": "6.2.0",
    "@ng-select/ng-select": "10.0.1",
    "@stomp/stompjs": "6.1.2",
    "@types/decompress": "4.2.4",
    "@types/xml2js": "0.4.14",
    "adm-zip": "0.5.10",
    "admin-lte": "2.4.18",
    "bootstrap": "3.4.1",
    "browserify-fs": "1.0.0",
    "custom-electron-titlebar": "4.1.3",
    "dayjs": "1.11.5",
    "decompress": "4.2.1",
    "electron": "21.4.4",
    "electron-icon-maker": "0.0.5",
    "electron-log": "4.4.8",
    "feedparser-promised": "2.0.1",
    "font-awesome-svg-png": "1.2.2",
    "fs-jetpack": "5.1.0",
    "jquery": "3.6.1",
    "keep-a-changelog": "2.1.0",
    "lockfile": "1.0.4",
    "lodash": "4.17.21",
    "marked": "4.1.1",
    "ngx-bootstrap": "9.0.0",
    "ngx-markdown": "14.0.1",
    "ngx-toastr": "16.2.0",
    "nodemailer-wellknown": "0.2.3",
    "office-ui-fabric-core": "11.0.1",
    "php-serialize": "4.0.2",
    "primeng": "14.1.2",
    "process": "0.11.10",
    "quill": "1.3.7",
    "rxjs": "7.5.7",
    "semver": "7.3.8",
    "smartmenus": "1.2.1",
    "sockjs-client": "1.5.2",
    "stack-utils": "2.0.5",
    "tail": "2.2.4",
    "tslib": "^2.4.0",
    "unique-filename": "3.0.0",
    "urling": "1.0.7",
    "vanilla-rss": "1.4.0",
    "xml2js": "0.6.2",
    "zone.js": "~0.11.6"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "15.0.0",
    "@angular-devkit/build-angular": "15.2.9",
    "@angular-eslint/builder": "15.2.1",
    "@angular-eslint/eslint-plugin": "15.2.1",
    "@angular-eslint/eslint-plugin-template": "15.2.1",
    "@angular-eslint/schematics": "15.2.1",
    "@angular-eslint/template-parser": "15.2.1",
    "@angular/cli": "15.2.9",
    "@angular/compiler-cli": "15.2.9",
    "@chromatic-com/storybook": "1.2.23",
    "@compodoc/compodoc": "1.1.23",
    "@ngx-translate/core": "14.0.0",
    "@ngx-translate/http-loader": "7.0.0",
    "@playwright/test": "1.41.2",
    "@storybook/addon-docs": "8.0.1",
    "@storybook/addon-essentials": "8.0.1",
    "@storybook/addon-interactions": "8.0.1",
    "@storybook/addon-links": "8.0.1",
    "@storybook/angular": "8.0.1",
    "@storybook/blocks": "8.0.1",
    "@storybook/test": "8.0.1",
    "@types/adm-zip": "0.5.0",
    "@types/chai": "4.3.3",
    "@types/chai-as-promised": "7.1.5",
    "@types/jasmine": "4.3.0",
    "@types/lockfile": "1.0.2",
    "@types/lodash": "4.14.186",
    "@types/node": "18.0.6",
    "@types/proper-lockfile": "4.1.2",
    "@types/quill": "1.3.10",
    "@types/semver": "7.3.12",
    "@types/sockjs-client": "1.5.1",
    "@types/stack-utils": "2.0.1",
    "@types/stompjs": "2.3.5",
    "@types/xml2js": "0.4.11",
    "@typescript-eslint/eslint-plugin": "5.30.7",
    "@typescript-eslint/parser": "5.30.7",
    "chai": "4.3.6",
    "chai-as-promised": "7.1.1",
    "chai-files": "1.4.0",
    "chai-http": "4.3.0",
    "chai-wait-for": "1.0.4",
    "code-tag": "1.1.0",
    "conventional-changelog-cli": "2.2.2",
    "cross-env": "7.0.3",
    "electron": "21.1.1",
    "electron-builder": "23.6.0",
    "electron-chromedriver": "19.0.0",
    "electron-debug": "3.2.0",
    "electron-reloader": "1.2.3",
    "eslint": "8.20.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsdoc": "39.3.3",
    "eslint-plugin-prefer-arrow": "1.2.3",
    "eslint-plugin-storybook": "0.8.0",
    "find-process": "1.4.7",
    "fs-extra": "11.1.0",
    "get-urls": "9.2.1",
    "gulp": "4.0.2",
    "jasmine": "4.5.0",
    "node-polyfill-webpack-plugin": "2.0.0",
    "npm-run-all": "4.1.5",
    "playwright": "1.41.2",
    "plugin-error": "2.0.0",
    "renamer": "4.0.0",
    "replace-in-file": "6.3.5",
    "rimraf": "3.0.2",
    "shx": "0.3.4",
    "storybook": "8.0.1",
    "sync-request": "6.1.0",
    "tree-kill": "1.2.2",
    "ts-node": "10.9.1",
    "typescript": "4.8.4",
    "wait-on": "6.0.1",
    "webpack-bundle-analyzer": "4.10.1"
  },
  "engines": {
    "node": ">= 14.15.0"
  },
  "browserslist": [
    "chrome 100"
  ]
}
